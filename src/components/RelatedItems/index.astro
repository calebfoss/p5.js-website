---
import {
  isCurationResponse,
  type OpenProcessingCurationResponse,
} from "@/src/api/OpenProcessing";
import type { CollectionEntry } from "astro:content";
import GridItemReference from "@components/GridItem/Reference.astro";
import GridItemExample from "@components/GridItem/Example.astro";
import GridItemEvent from "@components/GridItem/Event.astro";
import GridItemSketch from "@components/GridItem/Sketch.astro";

interface Props {
  title: string;
  items: Array<
    | CollectionEntry<"reference" | "examples" | "events">
    | OpenProcessingCurationResponse[number]
  >;
  class?: string;
}

const { title, items, class: className } = Astro.props;
---

<div class={className}>
  <hr />
  <h2 class="mt-md mb-lg">{title}</h2>
  <div class="grid grid-cols-2 lg:grid-cols-4 gap-y-xl gap-x-md lg:gap-x-10">
    {
      items.map((i) => {
        if (isCurationResponse(i)) {
          return <GridItemSketch item={i} />;
        }
        switch (i.collection) {
          case "reference":
            return <GridItemReference item={i} />;
          case "examples":
            return <GridItemExample item={i} />;
          case "events":
            return <GridItemEvent item={i} />;
        }
      })
    }
  </div>
</div>
