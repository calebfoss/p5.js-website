{
    "Home": "दीक्षा",
    "Download": "डाउनलोड",
    "Start": "प्रारंभ",
    "Reference": "संदर्भ",
    "reference-tagline": "प्रसंस्करण की अंतर्ज्ञान एक्स की शक्ति",
    "reference-search": "एपीआई खोजें",
    "reference-menu-home": "दीक्षा",
    "reference-menu-download": "डाउनलोड",
    "reference-menu-get-started": "प्रारंभ",
    "reference-menu-reference": "संदर्भ",
    "reference-menu-libraries": "पुस्तकालयों",
    "reference-menu-learn": "सीखने के लिए",
    "reference-menu-examples": "उदाहरण",
    "reference-menu-books": "किताबें",
    "reference-menu-community": "समुदाय",
    "reference-menu-forum": "मंच",
    "reference-description1": "आप जो खोज रहे हैं वह नहीं मिल रहा है? शायद आपको अंदर जांचना चाहिए",
    "reference-description2": "या",
    "reference-description3": "आप संदर्भ का एक संस्करण डाउनलोड कर सकते हैं",
    "reference-description4": "यहां",
    "reference-contribute1": "यदि आप कोई त्रुटि देखते हैं या कोई सुझाव है",
    "reference-contribute2": "कृपया हमें बताएं",
    "reference-error1": "क्या आपको कोई गलती मिली?",
    "reference-error2": "में प्रलेखित और परिभाषित किया गया है",
    "reference-error3": "कृपया बेझिझक करें",
    "reference-error4": "फ़ाइल संपादित करें",
    "reference-error5": "और पुल अनुरोध का संकेत देते हैं।",
    "reference-example": "उदाहरण",
    "reference-description": "विवरण",
    "reference-extends": "फैली",
    "reference-parameters": "मापदंडों",
    "reference-syntax": "वाक्य-विन्यास",
    "reference-returns": "रिटर्न",
    "footer1": "p5.js द्वारा बनाया गया था",
    "footer2": "और सहयोगियों के एक समुदाय द्वारा समर्थन से विकसित किया गया है",
    "footer3": "और",
    "footer4": "द्वारा पहचान और ग्राफिक डिजाइन",
    "Libraries": "पुस्तकालयों",
    "Learn": "सीखने के लिए",
    "Examples": "उदाहरण",
    "Books": "किताबें",
    "Community": "समुदाय",
    "Contribute": "योगदान",
    "Forum": "मंच",
    "h1": "संदर्भ",
    "Color": "रंग",
    "Shape": "आकार",
    "Creating & Reading": "सृजन और पढ़ना",
    "Setting": "विन्यास",
    "2D Primitives": "2D आदिम",
    "Attributes": "गुण",
    "Curves": "घटता",
    "Vertex": "कोने",
    "3D Models": "3 डी मॉडल",
    "3D Primitives": "3 डी प्रिमिटिव",
    "Constants": "स्थिरांक",
    "Structure": "संरचना",
    "Environment": "वातावरण",
    "DOM": "डोम",
    "Rendering": "प्रस्तुत करना",
    "Transform": "परिवर्तन",
    "Data": "डेटा",
    "Dictionary": "शब्दकोश",
    "Array Functions": "सरणी कार्य करता है",
    "Conversion": "रूपांतरण",
    "String Functions": "स्ट्रिंग फ़ंक्शंस",
    "Events": "घटनाक्रम",
    "Acceleration": "त्वरण",
    "Keyboard": "कीबोर्ड",
    "Mouse": "माउस",
    "Touch": "स्पर्श",
    "Image": "चित्र",
    "Loading & Displaying": "लोड और दिखाएँ",
    "Pixels": "पिक्सल",
    "IO": "प्रवेश और निकास",
    "Input": "प्रविष्टि",
    "Output": "उत्पादन",
    "Table": "तालिका",
    "Time & Date": "समय और दिनांक",
    "XML": "एक्सएमएल",
    "Math": "गणित",
    "Calculation": "गणना",
    "Noise": "शोर",
    "Trigonometry": "त्रिकोणमिति",
    "Typography": "टाइपोग्राफी",
    "Font": "स्रोत",
    "Lights, Camera": "रोशनी, कैमरा",
    "Camera": "कैमरा",
    "Lights": "दीपक",
    "Material": "सामग्री",
    "p5": {
		"alpha":{
			"description":"एक रंग या पिक्सेल की एक सरणी के अल्फा मूल्य निकालें।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"blue":{
			"description":"एक रंग या पिक्सेल की एक सरणी से नीले रंग का मान निकालें।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"brightness":{
			"description":"एक रंग या पिक्सेल की एक सरणी का एचएसबी चमक मूल्य निकालता है।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"color":{
			"description":[
                "रंग डेटाटाइप के चरों में भंडारण के लिए रंग बनाता है। पैरामीटर को वर्तमान <a href=\"#/p5/colorMode\">colorMode()</a> के आधार पर RGB या HSB मानों के रूप में व्याख्यायित किया जाता है। डिफ़ॉल्ट मोड आरजीबी मान 0 से 255 तक है और इसलिए, फ़ंक्शन कॉल रंग (255, 204, 0) एक चमकदार पीला रंग लौटाएगा।",
                "ध्यान दें कि यदि <a href=\"#/p5/color\">color()</a> को केवल एक मान प्रदान किया जाता है, तो इसे ग्रेस्केल मान के रूप में समझा जाएगा। दूसरा मान जोड़ें, और यह होगा अल्फा पारदर्शिता के लिए उपयोग किया जाता है। जब तीन मान निर्दिष्ट किए जाते हैं, तो उन्हें आरजीबी या एचएसबी मान के रूप में व्याख्या किया जाता है। चौथा मान जोड़ने से अल्फा पारदर्शिता लागू होती है। ",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग स्ट्रिंग और सभी नामित रंग स्ट्रिंग समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।"
              ],
			"params":[
				"संख्या | स्ट्रिंग: संख्या जो काले और सफेद के बीच मूल्य को निर्दिष्ट करती है।",
				"संख्या: वर्तमान रंग रेंज के सापेक्ष अल्फा मान (डिफ़ॉल्ट 0-100 है)",
				"नंबर | स्ट्रिंग: वर्तमान रंग रेंज या एक रंग स्ट्रिंग के सापेक्ष लाल या डाई का मूल्य",
				"संख्या: वर्तमान रंग रेंज के सापेक्ष हरे या संतृप्ति मूल्य",
				"संख्या: वर्तमान रंग रेंज के सापेक्ष नीले या चमक का मूल्य"
			],
			"returns":"फिक्स: परिणामस्वरूप रंग"
		},
		"green":{
			"description":"एक रंग या पिक्सेल की एक सरणी का हरा मान निकालें।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"hue":{
			"description":[
                "रंग या पिक्सेल सरणी से रंग मान निकालता है।",
                "ह्यू एचएसबी और एचएसएल दोनों में मौजूद है। एचएसबी रंग ऑब्जेक्ट के साथ आपूर्ति किए जाने पर यह फ़ंक्शन एचएसबी-सामान्यीकृत रंग लौटाएगा (या जब रंग मोड एचएसबी होने पर पिक्सेल सरणी के साथ आपूर्ति की जाती है), लेकिन एचएसएल-सामान्यीकृत रंग के लिए डिफ़ॉल्ट होगा अन्यथा। (मान केवल तभी भिन्न होंगे जब प्रत्येक सिस्टम के लिए अधिकतम ह्यू सेटिंग अलग हो।)"
              ],
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"lerpColor":{
			"description":[
                "दो रंगों को मिलाता है उनके बीच कहीं तीसरा रंग खोजने के लिए। एएमटी पैरामीटर दो मानों के बीच इंटरपोलेट करने की मात्रा है जहां 0.0 पहले रंग के बराबर है, 0.1 पहले रंग के बहुत करीब है, 0.5 बीच में आधा है, आदि। एक 0 से नीचे की राशि को 0 माना जाएगा। इसी तरह, 1 से ऊपर की राशि को 1 पर सीमित कर दिया जाएगा। यह <a href=\"#/p5/lerp\">lerp()</a> के व्यवहार से अलग है, लेकिन आवश्यक है क्योंकि अन्यथा सीमा के बाहर की संख्याएँ अजीब और अप्रत्याशित रंग उत्पन्न करेंगी।",
                "जिस तरह से रंगों को प्रक्षेपित किया जाता है वह वर्तमान रंग मोड पर निर्भर करता है।"
              ],
			"params":[
				"व्यवस्था / संख्या: इस रंग से प्रक्षेपित करें",
				"व्यवस्था / संख्या: इस रंग को प्रक्षेपित करें",
				"संख्या: 0 और 1 के बीच की संख्या"
			],
			"returns":"व्यवस्था / संख्या: प्रक्षेपित रंग"
		},
		"lightness":{
			"description":"एक रंग या पिक्सेल की एक सरणी के एचएसएल चमक मूल्य निकालता है।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
		},
		"red":{
			"description":"एक रंग या पिक्सेल की एक सरणी से लाल का मान निकालता है।",
			"params":[
				"ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
			],
			"returns":"p5 ऑब्जेक्ट"
        },
        "saturation": {
            "description": [
                "रंग या पिक्सेल सरणी से संतृप्ति मान निकालता है।",
                "संतृप्ति को एचएसबी और एचएसएल में अलग-अलग स्केल किया जाता है। यह फ़ंक्शन एचएसबी रंग ऑब्जेक्ट के साथ आपूर्ति किए जाने पर एचएसबी संतृप्ति लौटाएगा (या जब रंग मोड एचएसबी है, तो पिक्सेल सरणी के साथ आपूर्ति की जाती है), लेकिन अन्यथा एचएसएल संतृप्ति में डिफ़ॉल्ट होगा।"
              ],
            "params": [
                "ऑब्जेक्ट: ऑब्जेक्ट p5.Color या पिक्सेल की व्यवस्था"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "background": {
            "description": [
                "<a href=\"#/p5/background\">background()</a> फ़ंक्शन p5.js कैनवास की पृष्ठभूमि के लिए उपयोग किए गए रंग को सेट करता है। डिफ़ॉल्ट पृष्ठभूमि पारदर्शी होती है। यह फ़ंक्शन आमतौर पर अंदर उपयोग किया जाता है <a href=\"#/p5/draw\">draw()</a> प्रत्येक फ्रेम की शुरुआत में डिस्प्ले विंडो को साफ करने के लिए, लेकिन इसका उपयोग <a href=\"#/p5/setup\">सेटअप ()</a> एनिमेशन के पहले फ्रेम पर बैकग्राउंड सेट करने के लिए या अगर बैकग्राउंड को सिर्फ एक बार सेट करने की जरूरत है।",
                "रंग या तो आरजीबी, एचएसबी, या एचएसएल रंग के संदर्भ में निर्दिष्ट किया गया है जो वर्तमान <a href=\"#/p5/colorMode\">colorMode</a> पर निर्भर करता है। (डिफ़ॉल्ट रंग स्थान RGB है, जिसमें 0 से 255 तक की सीमा में प्रत्येक मान)। डिफ़ॉल्ट रूप से अल्फा श्रेणी भी 0 से 255 तक होती है। ",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग तार और सभी नामित रंग तार समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।",
                "एक <a href=\"#/p5.Color\">p5.Color</a> ऑब्जेक्ट भी बैकग्राउंड कलर सेट करने के लिए दिया जा सकता है। ",
                "एक <a href=\"#/p5.Image\">p5.Image</a> भी पृष्ठभूमि छवि सेट करने के लिए प्रदान किया जा सकता है।"
              ],
            "params": [
                "रंग: रंग () फ़ंक्शन के साथ बनाया गया कोई भी मान",
                "संख्या: वर्तमान रंग सीमा के सापेक्ष पृष्ठभूमि की अस्पष्टता (डिफ़ॉल्ट 0-100 है)",
                "colorstring: रंग स्ट्रिंग, संभव प्रारूप: पूर्णांक आरजीबी () या आरजीबीए (), प्रतिशत आरजीबी () या आरजीबीए (), हेक्स 3 अंक, हेक्स 6 अंक",
                "संख्या: काले और सफेद के बीच एक मान निर्दिष्ट करें",
                "संख्या: लाल या ह्यू मूल्य (वर्तमान रंग मोड के आधार पर)",
                "संख्या: हरे या संतृप्ति मूल्य (वर्तमान रंग मोड के आधार पर)",
                "संख्या: नीला या चमक मान (वर्तमान रंग मोड के आधार पर)",
                "p5.Image: लोड छवि के साथ बनाई गई छवि () या createImage (), पृष्ठभूमि के रूप में परिभाषित की जानी चाहिए (स्केच विंडो के समान आकार होना चाहिए)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "clear": {
            "description": "Clears the pixels within a buffer. This function only clears the canvas. It will not clear objects created by createX() methods such as <a href=\"#/p5/createVideo\">createVideo()</a> or <a href=\"#/p5/createDiv\">createDiv()</a>. Unlike the main graphics context, pixels in additional graphics areas created with <a href=\"#/p5/createGraphics\">createGraphics()</a> can be entirely or partially transparent. This function clears everything to make all of the pixels 100% transparent.",
            "returns": "p5 ऑब्जेक्ट"
        },
        "colorMode": {
            "description": [
                "<a href=\"#/p5/colorMode\">colorMode()</a> p5.js रंग डेटा की व्याख्या करने के तरीके को बदल देता है। डिफ़ॉल्ट रूप से, <a href=\"#/p5/fill\">भरें()</a>, <a href=\"#/p5/stroke\">stroke()</a>, <a href=\"#/p5/background\">background()< /a>, और <a href=\"#/p5/color\">color()</a> को RGB रंग मॉडल का उपयोग करके 0 और 255 के बीच के मानों द्वारा परिभाषित किया जाता है। यह colorMode (RGB, 255) सेट करने के बराबर है कलरमोड (एचएसबी) सेट करने से आप इसके बजाय एचएसबी सिस्टम का उपयोग कर सकते हैं। डिफ़ॉल्ट रूप से, यह कलरमोड (एचएसबी, 360, 100, 100, 1) है। आप एचएसएल का भी उपयोग कर सकते हैं। ",
                "नोट: मौजूदा रंगीन ऑब्जेक्ट उस मोड को याद रखते हैं जिसमें वे बनाए गए थे, इसलिए आप उनकी उपस्थिति को प्रभावित किए बिना अपनी पसंद के अनुसार मोड बदल सकते हैं।"
              ],
            "params": [
                "लगातार: आरजीबी या एचएसबी, लाल / हरे / नीले या डाई / संतृप्ति / चमक (या चमक) के अनुरूप।",
                "संख्या: लाल या डाई रेंज, वर्तमान रंग मोड के आधार पर, या सभी मानों के लिए सीमा",
                "संख्या: हरे या संतृप्ति की सीमा, वर्तमान रंग मोड पर निर्भर करता है।",
                "संख्या: वर्तमान रंग मोड के आधार पर नीले या चमक / चमक की सीमा।",
                "संख्या: अल्फा पारदर्शिता सीमा"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "fill": {
            "description": [
                "आकृतियों को भरने के लिए प्रयुक्त रंग सेट करता है। उदाहरण के लिए, यदि आप भरण (204, 102, 0) चलाते हैं, तो भरण आदेश के बाद खींची गई सभी आकृतियों को नारंगी रंग से भर दिया जाएगा। यह रंग या तो आरजीबी के संदर्भ में निर्दिष्ट है या वर्तमान <a href=\"#/p5/colorMode\">colorMode()</a> के आधार पर HSB रंग। (डिफ़ॉल्ट रंग स्थान RGB है, जिसमें प्रत्येक मान 0 से 255 के बीच होता है)। अल्फा डिफ़ॉल्ट रूप से सीमा भी 0 से 255 तक होती है।",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग तार और सभी नामित रंग तार समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।",
                "एक p5 <a href=\"#/p5.Color\">Color</a> ऑब्जेक्ट भी भरण रंग सेट करने के लिए प्रदान किया जा सकता है।"
              ],
            "params": [
                "संख्या | व्यवस्था | स्ट्रिंग | p5.Color: ग्रे, लाल, डाई (वर्तमान रंग मोड के आधार पर), या रंग व्यवस्था, या सीएसएस रंग स्ट्रिंग का मूल्य।",
                "संख्या: हरे या संतृप्ति मूल्य (वर्तमान रंग मोड के आधार पर)",
                "संख्या: नीला या चमक मान (वर्तमान रंग मोड के आधार पर)",
                "संख्या: पृष्ठभूमि अस्पष्टता"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "noFill": {
            "description": "ज्यामिति भरने को अक्षम करता है। अगर <a href=\"#/p5/noStroke\">noStroke()</a> और <a href=\"#/p5/noFill\">noFill()</a> दोनों को कॉल किया जाए, तो कुछ भी नहीं होगा स्क्रीन पर खींचा जा सकता है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "noStroke": {
            "description": [
                "स्ट्रोक (रूपरेखा) खींचना अक्षम करता है। यदि दोनों <a href=\"#/p5/noStroke\">noStroke()</a> और <a href=\"#/p5/noFill\">noFill() </a> कहा जाता है, स्क्रीन पर कुछ भी नहीं खींचा जाएगा।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "stroke": {
            "description": [
                "आकृतियों के चारों ओर रेखाएँ और सीमाएँ खींचने के लिए उपयोग किए गए रंग को सेट करता है। यह रंग या तो RGB या HSB रंग के संदर्भ में निर्दिष्ट होता है जो वर्तमान <a href=\"#/p5/colorMode\">colorMode()</a>पर निर्भर करता है। (डिफ़ॉल्ट रंग स्थान आरजीबी है, प्रत्येक मान 0 से 255 तक की सीमा में है। डिफ़ॉल्ट रूप से अल्फा श्रेणी भी 0 से 255 है। ",
                "यदि एक एकल स्ट्रिंग तर्क प्रदान किया जाता है, तो आरजीबी, आरजीबीए और हेक्स सीएसएस रंग तार और सभी नामित रंग तार समर्थित हैं। इस मामले में, दूसरे तर्क के रूप में अल्फा संख्या मान समर्थित नहीं है, आरजीबीए फॉर्म का उपयोग किया जाना चाहिए।",
                "स्ट्रोक रंग सेट करने के लिए एक p5 <a href=\"#/p5.Color\">Color</a> ऑब्जेक्ट भी प्रदान किया जा सकता है।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "arc": {
            "description": [
                "स्क्रीन पर एक चाप बनाएं। यदि केवल एक्स, वाई, डब्ल्यू, एच, स्टार्ट और स्टॉप के साथ बुलाया जाता है, तो चाप को एक खुले पाई सेगमेंट के रूप में खींचा और भर दिया जाएगा। यदि एक मोड पैरामीटर प्रदान किया जाता है, तो चाप भर जाएगा एक खुला अर्ध-वृत्त (OPEN), एक बंद अर्ध-वृत्त (CHORD), या एक बंद पाई खंड (PIE) के रूप में। मूल को <a href=\"#/p5/ellipseMode\">ellipseMode()</a>से बदला जा सकता है  समारोह। ",
                "चाप हमेशा दक्षिणावर्त खींची जाती है, जहां से प्रारंभ गिरती है, जहां दीर्घवृत्त पर स्टॉप गिरती है। किसी भी कोण में TWO_PI को जोड़ने या घटाने से वह नहीं बदलता जहां वे गिरते हैं। यदि दोनों प्रारंभ और स्टॉप एक ही स्थान पर गिरते हैं, तो एक पूर्ण दीर्घवृत्त खींचा जाएगा। ध्यान रखें कि y-अक्ष नीचे की दिशा में बढ़ता है, इसलिए कोणों को धनात्मक x-दिशा (\"3 बजे\") से दक्षिणावर्त मापा जाता है।"
              ],
            "params": [
                "संख्या: x दीर्घवृत्त चाप का समन्वय।",
                "संख्या: समन्वय और दीर्घवृत्त चाप।",
                "संख्या: दीर्घवृत्त चाप चौड़ाई।",
                "संख्या: दीर्घवृत्त मेहराब ऊंचाई।",
                "संख्या: दीर्घवृत्त चाप का प्रारंभिक कोण।",
                "संख्या: दीर्घवृत्त चाप का अंतिम कोण।",
                "लगातार: वैकल्पिक पैरामीटर यह निर्धारित करने के लिए कि चाप कैसे खींचना है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "ellipse": {
            "description": [
                "स्क्रीन पर एक अंडाकार (अंडाकार) खींचता है। डिफ़ॉल्ट रूप से, पहले दो पैरामीटर अंडाकार के केंद्र का स्थान निर्धारित करते हैं, और तीसरा और चौथा पैरामीटर आकार की चौड़ाई और ऊंचाई निर्धारित करता है। यदि कोई ऊंचाई निर्दिष्ट नहीं है, तो का मान चौड़ाई का उपयोग चौड़ाई और ऊंचाई दोनों के लिए किया जाता है। यदि एक नकारात्मक ऊंचाई या चौड़ाई निर्दिष्ट की जाती है, तो निरपेक्ष मान लिया जाता है। ",
                "समान चौड़ाई और ऊंचाई वाला एक दीर्घवृत्त एक वृत्त है। मूल को <a href=\"#/p5/ellipseMode\">ellipseMode()</a> फ़ंक्शन के साथ बदला जा सकता है।"
              ],
            "params": [
                "संख्या: x दीर्घवृत्त का समन्वय।",
                "संख्या: समन्वय और दीर्घवृत्त।",
                "संख्या: दीर्घवृत्त की चौड़ाई।",
                "संख्या: दीर्घवृत्त की ऊंचाई।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "line": {
            "description": [
                "स्क्रीन पर एक रेखा (दो बिंदुओं के बीच एक सीधा पथ) खींचता है। यदि केवल 4 पैरामीटर के साथ कॉल किया जाता है, तो यह 1 पिक्सेल की डिफ़ॉल्ट चौड़ाई के साथ 2D में एक रेखा खींचेगा। इस चौड़ाई को <a href=\"#/p5/strokeWeight\"> stokeWeight()</a>का उपयोग करके संशोधित किया जा सकता है फ़ंक्शन। एक लाइन को भरा नहीं जा सकता है, इसलिए <a href=\"#/p5/fill\">fill()</a> फंक्शन होगा किसी रेखा के रंग को प्रभावित न करें। इसलिए किसी रेखा को रंगने के लिए, <a href=\"#/p5/stroke\">stroke()</a> फ़ंक्शन का उपयोग करें।"
              ],
            "params": [
                "संख्या: पहले बिंदु का x समन्वय।",
                "संख्या: समन्वय और पहला बिंदु।",
                "संख्या: दूसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और दूसरा बिंदु।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "point": {
            "description": [
                "एक बिंदु खींचता है, एक पिक्सेल के आयाम पर अंतरिक्ष में एक निर्देशांक। पहला पैरामीटर बिंदु के लिए क्षैतिज मान है, दूसरा पैरामीटर बिंदु के लिए लंबवत मान है। बिंदु का रंग <a href =\"#/p5/stoke\">stoke()</a> के साथ बदल जाता है फ़ंक्शन। बिंदु का आकार <a href=\"#/p5/strokeWeight\">strokeWeight()</a से बदला जा सकता है > समारोह।"
              ],
            "params": [
                "संख्या: x समन्वय।",
                "संख्या: समन्वय और।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "quad": {
            "description": [
                "कैनवास पर एक क्वाड खींचता है। एक क्वाड एक चतुर्भुज, एक चार भुजा वाला बहुभुज है। यह एक आयत के समान है, लेकिन इसके किनारों के बीच के कोण नब्बे डिग्री तक सीमित नहीं हैं। मापदंडों की पहली जोड़ी (x1,y1) सेट पहले शीर्ष और बाद के जोड़े को परिभाषित आकार के चारों ओर दक्षिणावर्त या वामावर्त आगे बढ़ना चाहिए। z- तर्क केवल तभी काम करते हैं जब quad() का उपयोग WEBGL मोड में किया जाता है।"
              ],
            "params": [
                "संख्या: पहले बिंदु का x समन्वय।",
                "संख्या: समन्वय और पहला बिंदु।",
                "संख्या: दूसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और दूसरा बिंदु।",
                "संख्या: तीसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और तीसरा बिंदु।",
                "संख्या: चौथे बिंदु का x समन्वय।",
                "संख्या: समन्वय और चौथा बिंदु।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rect": {
            "description": [
                "कैनवास पर एक आयत बनाता है। एक आयत एक चार-तरफा बंद आकार है जिसमें प्रत्येक कोण नब्बे डिग्री पर होता है। डिफ़ॉल्ट रूप से, पहले दो पैरामीटर ऊपरी-बाएं कोने का स्थान निर्धारित करते हैं, तीसरा चौड़ाई सेट करता है, और चौथा ऊंचाई सेट करता है। जिस तरह से इन मापदंडों की व्याख्या की जाती है, उसे <a href=\"#/p5/rectMode\">rectMode()</a> फ़ंक्शन के साथ बदला जा सकता है। ",
                "पांचवां, छठा, सातवां और आठवां पैरामीटर, यदि निर्दिष्ट किया गया है, क्रमशः शीर्ष-बाएं, शीर्ष-दाएं, निचले-दाएं और निचले-बाएं कोनों के लिए कोने त्रिज्या निर्धारित करें। एक छोड़ा गया कोने त्रिज्या पैरामीटर के मान पर सेट किया गया है पैरामीटर सूची में पहले निर्दिष्ट त्रिज्या मान।"
              ],
            "params": [
                "संख्या: आयत का x समन्वय।",
                "संख्या: समन्वय और आयत।",
                "संख्या: आयत चौड़ाई।",
                "संख्या: आयत ऊंचाई।",
                "संख्या: ऊपरी बाएं कोने में वैकल्पिक रेडियो।",
                "नंबर: ऊपरी दाएं कोने में वैकल्पिक रेडियो।",
                "नंबर: निचले दाएं कोने में वैकल्पिक रेडियो।",
                "संख्या: निचले बाएं कोने में वैकल्पिक रेडियो।",
                "संख्या:",
                "संख्या:"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "triangle": {
            "description": [
                "एक त्रिभुज को कैनवास पर खींचता है। एक त्रिभुज तीन बिंदुओं को जोड़कर बनाया गया एक विमान है। पहले दो तर्क पहले बिंदु को निर्दिष्ट करते हैं, मध्य दो तर्क दूसरे बिंदु को निर्दिष्ट करते हैं, और अंतिम दो तर्क तीसरे बिंदु को निर्दिष्ट करते हैं।"
              ],
            "params": [
                "संख्या: पहले बिंदु का x समन्वय।",
                "संख्या: समन्वय और पहला बिंदु।",
                "संख्या: दूसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और दूसरा बिंदु।",
                "संख्या: तीसरे बिंदु का x समन्वय।",
                "संख्या: समन्वय और तीसरा बिंदु।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "ellipseMode": {
            "description": [
                "उस स्थान को संशोधित करता है जहां से दीर्घवृत्त खींचे जाते हैं, जिस तरह से पैरामीटर दिए गए हैं <a href=\"#/p5/ellipse\">ellipse()</a>, <a href=\"#/p5/circle\">circle()</a> और <a href=\" #/p5/arc\">arc()</a> की व्याख्या की जाती है। ",
                "डिफ़ॉल्ट मोड CENTER है, जिसमें पहले दो मापदंडों की व्याख्या आकृति के केंद्र बिंदु के रूप में क्रमशः x और y निर्देशांक के रूप में की जाती है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "ellipseMode(RADIUS) आकृति के केंद्र बिंदु के x और y निर्देशांक के रूप में पहले दो पैरामीटर का भी उपयोग करता है, लेकिन आकार की चौड़ाई और ऊंचाई के आधे हिस्से को निर्दिष्ट करने के लिए तीसरे और चौथे पैरामीटर का उपयोग करता है।",
                "ellipseMode(CORNER) आकृति के ऊपरी-बाएँ कोने के रूप में पहले दो मापदंडों की व्याख्या करता है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "ellipseMode(CORNERS) पहले दो मापदंडों को दीर्घवृत्त के बाउंडिंग बॉक्स के एक कोने के स्थान के रूप में और तीसरे और चौथे पैरामीटर को विपरीत कोने के स्थान के रूप में व्याख्या करता है।",
                "इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।"
              ],
            "params": [
                "लगातार: यह केंद्र, त्रिज्या, कोरनर या कोरनर्स हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "noSmooth": {
            "description": [
                "सभी ज्यामिति को दांतेदार (उपनाम) किनारों के साथ खींचता है। ध्यान दें कि <a href=\"#/p5/smooth\">smooth()</a> डिफ़ॉल्ट रूप से 2D मोड में सक्रिय है, इसलिए कॉल करना आवश्यक है <a href=\"#/p5/noSmooth\">noSmooth()</a> ज्योमेट्री, इमेज और फॉण्ट की स्मूदिंग को डिसेबल करने के लिए। 3D मोड में <a href=\"#/p5/noSmooth\">noSmooth()</a> डिफ़ॉल्ट रूप से सक्षम है, इसलिए <a href=\"#/p5/smooth\">smooth()</a> को कॉल करना आवश्यक है यदि आप अपनी ज्यामिति पर चिकने (एंटीअलाइज्ड) किनारे चाहते हैं।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rectMode": {
            "description": [
                "उस स्थान को संशोधित करता है जहां से पैरामीटर दिए गए तरीके को बदलकर आयतें खींची जाती हैं <a href=\"#/p5/rect\">rect()</a> की व्याख्या की जाती है। ",
                "डिफ़ॉल्ट मोड कॉर्नर है, जो पहले दो मापदंडों को आकार के ऊपरी-बाएँ कोने के रूप में व्याख्या करता है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "रेक्टमोड (कॉर्नर) पहले दो मापदंडों को कोनों में से एक के स्थान के रूप में और तीसरे और चौथे पैरामीटर को तिरछे विपरीत कोने के स्थान के रूप में व्याख्या करता है। ध्यान दें, आयत निर्देशांक के बीच खींचा जाता है, इसलिए यह आवश्यक नहीं है कि पहला कोना ऊपरी बाएँ कोना होगा। ",
                "rectMode(CENTER) आकृति के केंद्र बिंदु के रूप में पहले दो मापदंडों की व्याख्या करता है, जबकि तीसरा और चौथा पैरामीटर इसकी चौड़ाई और ऊंचाई है।",
                "rectMode(RADIUS) आकृति के केंद्र बिंदु के रूप में पहले दो मापदंडों का भी उपयोग करता है, लेकिन क्रमशः आकार की चौड़ाई और ऊंचाई के आधे हिस्से को निर्दिष्ट करने के लिए तीसरे और चौथे पैरामीटर का उपयोग करता है।",
                "इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।"
              ],
            "params": [
                "लगातार: यह कॉर्नर, कोरनर्स, केंद्र या RADIUS हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "smooth": {
            "description": [
                "सभी ज्यामिति को चिकने (एंटी-अलियास) किनारों के साथ खींचता है। <a href=\"#/p5/smooth\">smooth()</a> आकार बदलने वाली छवियों की छवि गुणवत्ता में भी सुधार करेगा। ध्यान दें कि <a href=\"#/p5/smooth\">smooth()</a> डिफ़ॉल्ट रूप से 2D मोड में सक्रिय है; <a href=\"#/p5/noSmooth\">noSmooth()</a> का इस्तेमाल ज्योमेट्री, इमेज और फोंट की स्मूदिंग को डिसेबल करने के लिए किया जा सकता है। 3डी मोड में, <a href=\"#/p5/noSmooth\">noSmooth()</a> डिफ़ॉल्ट रूप से सक्षम है, इसलिए <a href=\"#/p5/smooth\">smooth()</a> को कॉल करना आवश्यक है यदि आप अपनी ज्यामिति पर चिकने (एंटीअलाइज्ड) किनारे चाहते हैं।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "strokeCap": {
            "description": [
                "लाइन एंडिंग को रेंडर करने के लिए स्टाइल सेट करता है। ये सिरे या तो गोल, चौकोर या विस्तारित होते हैं, जिनमें से प्रत्येक को संबंधित मापदंडों के साथ निर्दिष्ट किया जाता है: ROUND, SQUARE और PROJECT। डिफ़ॉल्ट कैप राउंड है। ",
                "इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।"
              ],
            "params": [
                "लगातार: यह SQUARE, PROJECT, या ROUND हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "strokeJoin": {
            "description": [ "जोड़ों की शैली सेट करता है जो लाइन सेगमेंट को जोड़ता है। ये जोड़ या तो मिटर्ड, बेवेल या गोलाकार होते हैं और संबंधित पैरामीटर एमआईटीईआर, बेवेल और राउंड के साथ निर्दिष्ट होते हैं। डिफ़ॉल्ट संयुक्त एमआईटीईआर है। इस पद्धति के पैरामीटर को सभी CAPS में लिखा जाना चाहिए क्योंकि वे सभी CAPS में स्थिरांक के रूप में पूर्वनिर्धारित हैं और जावास्क्रिप्ट एक केस-संवेदी भाषा है।" 
           ],
            "params": [
                "लगातार: यह MITER, BEVEL, या ROUND हो सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "strokeWeight": {
            "description": "रेखाओं, बिंदुओं और ज्यामितीय आकृतियों के किनारों को खींचने के लिए उपयोग किए जाने वाले स्ट्रोक की चौड़ाई को परिभाषित करें। सभी चौड़ाई पिक्सेल में मापी जाती हैं।",
            "params": [
                "संख्या: पथ का भार (पिक्सेल में)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "bezier": {
            "description": [
                "स्क्रीन पर एक क्यूबिक बेज़ियर वक्र बनाता है। इन वक्रों को एंकर और नियंत्रण बिंदुओं की एक श्रृंखला द्वारा परिभाषित किया जाता है। पहले दो पैरामीटर पहले एंकर पॉइंट को निर्दिष्ट करते हैं और अंतिम दो पैरामीटर अन्य एंकर पॉइंट को निर्दिष्ट करते हैं, जो पहले और अंतिम बिंदु बन जाते हैं। वक्र पर। मध्य पैरामीटर दो नियंत्रण बिंदुओं को निर्दिष्ट करते हैं जो वक्र के आकार को परिभाषित करते हैं। लगभग बोलते हुए, नियंत्रण बिंदु वक्र को उनकी ओर \"खींचें\"। ",
                "बेज़ियर कर्व्स फ्रांसीसी ऑटोमोटिव इंजीनियर पियरे बेज़ियर द्वारा विकसित किए गए थे, और आमतौर पर कंप्यूटर ग्राफिक्स में धीरे-धीरे ढलान वाले वक्रों को परिभाषित करने के लिए उपयोग किए जाते हैं। <a href=\"#/p5/curve\">वक्र()</a> भी देखें।"
              ],
            "params": [
                "संख्या: पहले एंकर बिंदु का x समन्वय",
                "संख्या: समन्वय और पहले लंगर बिंदु",
                "संख्या: पहला नियंत्रण बिंदु का x समन्वय",
                "संख्या: समन्वय और पहला नियंत्रण बिंदु",
                "संख्या: x दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: समन्वय और दूसरा नियंत्रण बिंदु",
                "संख्या: x दूसरी एंकर बिंदु का समन्वय",
                "संख्या: समन्वय और दूसरा लंगर बिंदु",
                "संख्या: पहले लंगर बिंदु का z समन्वय",
                "संख्या: z पहला नियंत्रण बिंदु का समन्वय",
                "संख्या: दूसरे एंकर बिंदु का z समन्वय",
                "संख्या: दूसरे नियंत्रण बिंदु का z समन्वय"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "bezierPoint": {
            "description": [
                "बेज़ियर वक्र के नियंत्रण और एंकर बिंदुओं के x या y समन्वय मानों को देखते हुए, यह स्थिति t पर बेज़ियर के x या y निर्देशांक का मूल्यांकन करता है। पैरामीटर a और d पहले और अंतिम बिंदुओं के x या y निर्देशांक हैं। वक्र पर जबकि बी और सी नियंत्रण बिंदुओं के हैं। अंतिम पैरामीटर टी परिणामी बिंदु की स्थिति है जो 0 और 1 के बीच दिया गया है। यह एक बार x निर्देशांक के साथ और दूसरी बार y निर्देशांक के साथ किया जा सकता है t पर एक बेजियर वक्र का स्थान प्राप्त करें।"
              ],
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "स्थिति टी पर बेज़ियर वक्र का मूल्य"
        },
        "bezierTangent": {
            "description": [
                "A, B, C, D के लिए स्थितिी t पर बेज़ियर के स्पर्शरेखा का मूल्यांकन करता है। पैरामीटर A और D वक्र पर पहले और आखिरी बिंदु हैं, और B और D नियंत्रण बिंदु हैं। अंतिम पैरामीटर t के बीच भिन्न होता है 0 और 1।"
              ],
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "स्थिति में स्पर्शरेखा t"
        },
        "curve": {
            "description": [
                "स्क्रीन पर दो बिंदुओं के बीच एक घुमावदार रेखा खींचता है, जिसे मध्य चार मापदंडों के रूप में दिया गया है। पहले दो पैरामीटर एक नियंत्रण बिंदु हैं, जैसे कि वक्र इस बिंदु से आया है, भले ही वह खींचा न गया हो। अंतिम दो पैरामीटर समान रूप से दूसरे का वर्णन करते हैं नियंत्रण बिंदु। <br /><br /> <a href=\"#/p5/curve\">curve()</a> कार्यों की श्रृंखला को एक साथ रखकर या <a href= \"#/p5/curveVertex\">curveVertex()</a>। एक अतिरिक्त फ़ंक्शन जिसे <a href=\"#/p5/curveTightness\">curveTightness()</a> कहा जाता है, की दृश्य गुणवत्ता के लिए नियंत्रण प्रदान करता है वक्र। <a href=\"#/p5/curve\">curve()</a> फ़ंक्शन Catmull-Rom splines का कार्यान्वयन है।"
              ],
            "params": [
                "संख्या: प्रारंभिक नियंत्रण बिंदु का x समन्वय",
                "संख्या: समन्वय और प्रारंभिक चेकपॉइंट",
                "संख्या: पहले बिंदु का x समन्वय",
                "संख्या: समन्वय और पहला बिंदु",
                "संख्या: दूसरे बिंदु का x समन्वय",
                "संख्या: समन्वय और दूसरा बिंदु",
                "संख्या: x अंतिम नियंत्रण बिंदु का समन्वय",
                "संख्या: समन्वय और अंतिम नियंत्रण बिंदु",
                "संख्या: z प्रारंभिक नियंत्रण बिंदु का समन्वय",
                "संख्या: z पहले बिंदु का समन्वय",
                "संख्या: z दूसरे बिंदु का समन्वय",
                "संख्या: z अंतिम नियंत्रण बिंदु का समन्वय"
            ],
            "returns": "ऑब्जेक्ट: ऑब्जेक्ट पी 5"
        },
        "curveTightness": {
            "description": "<a href=\"#/p5/curve\">curve()</a> और <a href=\"#/p5/curveVertex\">curveVertex()</a के साथ बनाए गए फ़ॉर्म की गुणवत्ता को संशोधित करता है >। पैरामीटर की जकड़न यह निर्धारित करती है कि वक्र शीर्ष बिंदुओं पर कैसे फिट बैठता है। मान 0.0 जकड़न के लिए डिफ़ॉल्ट मान है (यह मान वक्र को कैटमुल-रोम स्प्लिन के रूप में परिभाषित करता है) और मान 1.0 सभी बिंदुओं को सीधी रेखाओं से जोड़ता है। मान -5.0 और 5.0 की सीमा के भीतर वक्र विकृत हो जाएंगे लेकिन उन्हें पहचानने योग्य छोड़ देंगे और जैसे-जैसे मान परिमाण में बढ़ेगा, वे विकृत होते रहेंगे।",
            "params": [
                "संख्या: मूल कोने की विकृति"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "curvePoint": {
            "description": "A, B, C, D के लिए स्थिति टी पर वक्र का मूल्यांकन करता है। पैरामीटर टी 0 और 1 के बीच भिन्न होता है, A और D वक्र के नियंत्रण बिंदु होते हैं, और B और C वक्र के प्रारंभ और अंत बिंदु होते हैं। यह एक बार x निर्देशांक के साथ और दूसरी बार y निर्देशांक के साथ t पर वक्र का स्थान प्राप्त करने के लिए किया जा सकता है।",
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "curveTangent": {
            "description": "A, B, C, D के लिए स्थिति t पर वक्र के स्पर्शरेखा का मूल्यांकन करता है। पैरामीटर टी 0 और 1 के बीच भिन्न होता है, A और D वक्र पर बिंदु होते हैं, और B और C नियंत्रण बिंदु होते हैं।",
            "params": [
                "संख्या: वक्र के पहले बिंदु का समन्वय",
                "संख्या: वक्र के पहले नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे नियंत्रण बिंदु का समन्वय",
                "संख्या: वक्र के दूसरे बिंदु का समन्वय",
                "संख्या: 0 और 1 के बीच का मान"
            ],
            "returns": "स्थिति में स्पर्शरेखा t"
        },
        "beginContour": {
            "description": [
                "नकारात्मक बनाने के लिए <a href=\"#/p5/beginContour\">beginContour()</a> और <a href=\"#/p5/endContour\">endContour()</a> फ़ंक्शन का उपयोग करें अक्षर 'O' के केंद्र जैसे आकार के भीतर आकार। <a href=\"#/p5/beginContour\">beginContour()</a> आकृति के लिए शीर्षों को रिकॉर्ड करना शुरू करता है और <a href=\"#/ p5/endContour\">endContour()</a> रिकॉर्डिंग बंद कर देता है। ऋणात्मक आकार को परिभाषित करने वाले शीर्षों को बाहरी आकार से विपरीत दिशा में \"wind\" होना चाहिए। पहले बाहरी दक्षिणावर्त क्रम के लिए शीर्ष बनाएं, फिर आंतरिक के लिए आकृतियाँ, वामावर्त में शीर्ष आकृतियाँ बनाएँ।",
                "इन कार्यों का उपयोग केवल <a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a> में किया जा सकता है। जोड़ी और रूपांतरण जैसे <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a> , और <a href=\"#/p5/scale\">scale()</a> एक <a href=\"#/p5/beginContour\">beginContour()</a>/ के भीतर काम नहीं करते हैं <a href=\"#/p5/endContour\">endContour()</a> जोड़ी। अन्य आकृतियों का उपयोग करना भी संभव नहीं है, जैसे कि <a href=\"#/p5/ellipse\">ellipse ()</a> या <a href=\"#/p5/rect\">rect()</a> भीतर।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "beginShape": {
            "description": [
                "<a href=\"#/p5/beginShape\">beginShape()</a> और <a href=\"#/p5/endShape\">endShape()</a> फ़ंक्शन का उपयोग करने से और अधिक निर्माण करने की अनुमति मिलती है जटिल रूप। <a href=\"#/p5/beginShape\">beginShape()</a> एक आकृति के लिए शीर्षों को रिकॉर्ड करना शुरू करता है और <a href=\"#/p5/endShape\">endShape()</a> a> रिकॉर्डिंग बंद कर देता है। प्रकार के पैरामीटर का मान यह बताता है कि दिए गए शीर्षों से किस प्रकार की आकृतियाँ बनानी हैं। बिना किसी विधा के निर्दिष्ट किए, आकार कोई भी अनियमित बहुभुज हो सकता है। ",
                "<a href=\"#/p5/beginShape\">beginShape()</a> के लिए उपलब्ध पैरामीटर POINTS, LINES, TRIANGLES, TRIANGLE_FAN, TRIANGLE_STRIP, QUADS, QUAD_STRIP, और TESS (केवल WebGL) हैं। कॉल करने के बाद <a href=\"#/p5/beginShape\">beginShape()</a> फ़ंक्शन, <a href=\"#/p5/vertex\">vertex()</a> कमांड की एक श्रृंखला होनी चाहिए अनुसरण करें। आकृति बनाना बंद करने के लिए, <a href=\"#/p5/endShape\">endShape()</a> पर कॉल करें। प्रत्येक आकृति को वर्तमान स्ट्रोक रंग से रेखांकित किया जाएगा और भरण रंग से भरा जाएगा। ",
                "रूपांतरण जैसे <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a>, और < a href=\"#/p5/scale\">scale()</a> <a href=\"#/p5/beginShape\">beginShape()</a> के भीतर काम नहीं करते। यह भी नहीं है अन्य आकृतियों का उपयोग करना संभव है, जैसे कि <a href=\"#/p5/ellipse\">ellipse()</a> या <a href=\"#/p5/rect\">rect()</a > के भीतर <a href=\"#/p5/beginShape\">beginShape()</a>।"
              ],
            "params": [
                "लगातार: POINTS, LINES, TRIANGLES, TRIANGLE_FAN TRIANGLE_STRIP, QUADS, या QUAD_STRIP हो सकते हैं"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "bezierVertex": {
            "description": [
                "बेज़ियर कर्व्स के लिए वर्टेक्स निर्देशांक निर्दिष्ट करता है। bezierVertex() के लिए प्रत्येक कॉल दो नियंत्रण बिंदुओं की स्थिति और एक बेज़ियर वक्र के एक एंकर पॉइंट को परिभाषित करता है, एक लाइन या आकार में एक नया सेगमेंट जोड़ता है। वेबजीएल मोड के लिए bezierVertex() में इस्तेमाल किया जा सकता है 2डी और साथ ही 3डी मोड। 2डी मोड 6 पैरामीटर की अपेक्षा करता है, जबकि 3डी मोड 9 पैरामीटर (जेड निर्देशांक सहित) की अपेक्षा करता है। ",
                "पहली बार bezierVertex() का उपयोग <a href=\"#/p5/beginShape\">beginShape()</a> कॉल के भीतर किया जाता है, इसे <a href=\"#/ पहला एंकर बिंदु सेट करने के लिए p5/vertex\">vertex()</a>। इस फ़ंक्शन का उपयोग <a href=\"#/p5/beginShape\">beginShape()</a> और <a के बीच किया जाना चाहिए href=\"#/p5/endShape\">endShape()</a> और केवल तभी जब <a href=\"#/p5/beginShape\">beginShape()</ में निर्दिष्ट कोई MODE या POINTS पैरामीटर न हो। ए>।"
              ],
            "params": [
                "संख्या: पहला नियंत्रण बिंदु के x समन्वय वक्र को इंगित करता है",
                "संख्या: समन्वय और पहला वक्र नियंत्रण बिंदु",
                "संख्या: x दूसरे नियंत्रण बिंदु वक्र का समन्वय करता है",
                "संख्या: समन्वय और दूसरा वक्र नियंत्रण बिंदु",
                "संख्या: पहले एंकर बिंदु का x समन्वय",
                "संख्या: समन्वय और पहले लंगर बिंदु"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "curveVertex": {
            "description": [
                "वक्र के लिए शीर्ष निर्देशांक निर्दिष्ट करता है। इस फ़ंक्शन का उपयोग केवल <a href=\"#/p5/beginShape\">beginShape()</a> और <a href=\"#/p5/endShape\"> endShape()</a>के बीच किया जा सकता है और केवल तभी जब <a href=\"#/p5/beginShape\">beginShape()</a> के लिए निर्दिष्ट कोई मोड पैरामीटर न हो। WebGL मोड के लिए curveVertex() का उपयोग 2D में किया जा सकता है साथ ही 3D मोड। 2D मोड 2 पैरामीटर की अपेक्षा करता है, जबकि 3D मोड 3 पैरामीटर की अपेक्षा करता है। ",
                "वक्र की शुरुआत और अंत को निर्देशित करने के लिए curveVertex() लाइनों की एक श्रृंखला में पहले और अंतिम बिंदुओं का उपयोग किया जाएगा। दूसरे और तीसरे बिंदुओं के बीच एक छोटा वक्र खींचने के लिए न्यूनतम चार बिंदुओं की आवश्यकता होती है। पांचवां जोड़ना curveVertex() के साथ बिंदु दूसरे, तीसरे और चौथे बिंदुओं के बीच वक्र खींचेगा। curveVertex() फ़ंक्शन कैटमुल-रोम स्प्लिन का कार्यान्वयन है।"
              ],
            "params": [
                "संख्या: x शीर्ष का समन्वय",
                "संख्या: समन्वय और शीर्ष"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "endContour": {
            "description": [
                "ऋण बनाने के लिए <a href=\"#/p5/beginContour\">beginContour()</a> और <a href=\"#/p5/endContour\">endContour()</a> फ़ंक्शन का उपयोग करें अक्षर 'O' के केंद्र जैसे आकार के भीतर आकार। <a href=\"#/p5/beginContour\">beginContour()</a> आकृति के लिए शीर्षों को रिकॉर्ड करना शुरू करता है और <a href=\"#/ p5/endContour\">endContour()</a> रिकॉर्डिंग बंद कर देता है। ऋणात्मक आकार को परिभाषित करने वाले शीर्षों को बाहरी आकार से विपरीत दिशा में \"wind\" होना चाहिए। पहले बाहरी दक्षिणावर्त क्रम के लिए कोने बनाएं, फिर आंतरिक के लिए आकृतियाँ, वामावर्त में शीर्ष आकृतियाँ बनाएँ।",
                "इन कार्यों का उपयोग केवल <a href=\"#/p5/beginShape\">beginShape()</a>/<a href=\"#/p5/endShape\">endShape()</a> में किया जा सकता है। जोड़ी और रूपांतरण जैसे <a href=\"#/p5/translate\">translate()</a>, <a href=\"#/p5/rotate\">rotate()</a> , और <a href=\"#/p5/scale\">scale()</a> एक <a href=\"#/p5/beginContour\">beginContour()</a>/ के भीतर काम नहीं करते हैं <a href=\"#/p5/endContour\">endContour()</a> जोड़ी। अन्य आकृतियों का उपयोग करना भी संभव नहीं है, जैसे कि <a href=\"#/p5/ellipse\">ellipse ()</a> या <a href=\"#/p5/rect\">rect()</a> भीतर।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "endShape": {
            "description": [
                "<a href=\"#/p5/endShape\">endShape()</a> फ़ंक्शन <a href=\"#/p5/beginShape\">beginShape()</a> का सहयोगी है और <a href=\"#/p5/beginShape\">beginShape()</a> के बाद ही कॉल किया जा सकता है। जब <a href=\"#/p5/endshape\">endShape()</a> है कहा जाता है, पिछली कॉल के बाद से परिभाषित सभी छवि डेटा <a href=\"#/p5/beginShape\">beginShape()</a> को छवि बफर में लिखा जाता है। मोड पैरामीटर के मान के रूप में स्थिर बंद करें आकृति को बंद करने के लिए (शुरुआत और अंत को जोड़ने के लिए)।"
              ],
            "params": [
                "लगातार: आंकड़ा बंद करने के लिए CLOSE का उपयोग करें।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "quadraticVertex": {
            "description": [
                "द्विघात बेज़ियर वक्रों के लिए शीर्ष निर्देशांक निर्दिष्ट करता है। quadraticVertex() के लिए प्रत्येक कॉल एक नियंत्रण बिंदु और एक Bezier वक्र के एक एंकर बिंदु की स्थिति को परिभाषित करता है, एक रेखा या आकार में एक नया खंड जोड़ता है। पहली बार quadraticVertex() का उपयोग किया जाता है एक <a href=\"#/p5/beginShape\">beginShape()</a> कॉल, इसे <a href=\"#/p5/vertex\">vertex()</a>पर कॉल के साथ पहले से तैयार किया जाना चाहिए पहला एंकर पॉइंट सेट करने के लिए। WebGL मोड के लिए quadraticVertex() का उपयोग 2D के साथ-साथ 3D मोड में भी किया जा सकता है। 2D मोड 4 पैरामीटर की अपेक्षा करता है, जबकि 3D मोड 6 पैरामीटर (z निर्देशांक सहित) की अपेक्षा करता है। ",
                "इस फ़ंक्शन का उपयोग <a href=\"#/p5/beginShape\">beginShape()</a> और <a href=\"#/p5/endShape\">endShape()</a> के बीच किया जाना चाहिए और केवल तभी जब <a href=\"#/p5/beginShape\">beginShape()</a> में निर्दिष्ट कोई मोड या POINTS पैरामीटर न हो।"
              ],
            "params": [
                "संख्या: x नियंत्रण बिंदु का समन्वय",
                "संख्या: समन्वय और नियंत्रण बिंदु",
                "संख्या: x एंकर बिंदु का समन्वय",
                "संख्या: समन्वय और लंगर बिंदु"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "vertex": {
            "description": [
                "सभी आकृतियों का निर्माण शीर्षों की एक श्रृंखला को जोड़कर किया जाता है। <a href=\"#/p5/vertex\">vertex()</a> का उपयोग बिंदुओं, रेखाओं, त्रिभुजों, चतुर्भुज और के लिए शीर्ष निर्देशांक निर्दिष्ट करने के लिए किया जाता है। बहुभुज। इसका उपयोग विशेष रूप से <a href=\"#/p5/beginShape\">beginShape()</a> और <a href=\"#/p5/endShape\">endShape()</a> में किया जाता है कार्य।"
              ],
            "params": [
                "संख्या: x शीर्ष का समन्वय",
                "संख्या: समन्वय और शीर्ष"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "loadModel": {
            "description": [
                "किसी OBJ या STL फ़ाइल से 3D मॉडल लोड करें।",
                "<a href=\"#/p5/loadModel\">loadModel()</a> को <a href=\"#/p5/preload\">preload()</a> के अंदर रखा जाना चाहिए। यह आपके शेष कोड के चलने से पहले मॉडल को पूरी तरह से लोड होने देता है।",
                "ओबीजे और एसटीएल प्रारूप की सीमाओं में से एक यह है कि इसमें अंतर्निहित पैमाने की भावना नहीं है। इसका मतलब है कि विभिन्न कार्यक्रमों से निर्यात किए गए मॉडल बहुत भिन्न आकार के हो सकते हैं। यदि आपका मॉडल प्रदर्शित नहीं हो रहा है, तो कॉल करने का प्रयास करें <a href=\"#/p5/loadModel\">loadModel()</a> सामान्यीकृत पैरामीटर के साथ सत्य पर सेट है। यह मॉडल को p5 के लिए उपयुक्त पैमाने पर आकार देगा। आप फाइनल में अतिरिक्त परिवर्तन भी कर सकते हैं <a href=\"#/p5/scale\">scale()</a> फ़ंक्शन के साथ आपके मॉडल का आकार। ",
                "साथ ही, रंगीन एसटीएल फाइलों के लिए समर्थन मौजूद नहीं है। रंग के साथ एसटीएल फाइलें रंग गुणों के बिना प्रस्तुत की जाएंगी।"
              ],
            "params": [
                "स्ट्रिंग: लोड करने के लिए मॉडल का स्थान",
                "बूलियन: यदि सच है, लोडिंग के समय मॉडल को एक मानकीकृत आकार में स्केल करें।",
                "फ़ंक्शन (p5.Geometry3D): मॉडल लोड होने पर कहा जाने वाला फ़ंक्शन। इसे 3D ऑब्जेक्ट मॉडल में पास किया जाएगा।",
                "फ़ंक्शन (ईवेंट): ईवेंट त्रुटि के साथ कॉल करें यदि छवि लोड करने में विफल नहीं होती है।"
            ],
            "returns": "p5.Geometry3D ऑब्जेक्ट"
        },
        "model": {
            "description": "यह स्क्रीन पर एक 3D मॉडल प्रस्तुत करता है।",
            "params": [
                "p5.Geometry: 3D मॉडल को रेंडर करने के लिए लोड किया गया है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "plane": {
            "description": "पासा चौड़ाई और ऊंचाई के साथ एक विमान ड्रा।",
            "params": [
                "संख्या: विमान की चौड़ाई",
                "संख्या: विमान की ऊँचाई",
                "संख्या: आयाम x में त्रिकोणीय उपविभागों की वैकल्पिक संख्या",
                "संख्या: आयाम में त्रिकोणीय उप विभाजनों की वैकल्पिक संख्या और"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "box": {
            "description": "डाइस चौड़ाई, ऊंचाई और गहराई के साथ एक बॉक्स ड्रा करें।",
            "params": [
                "संख्या: बॉक्स चौड़ाई",
                "संख्या: बॉक्स ऊंचाई",
                "संख्या: बॉक्स की गहराई",
                "संख्या: आयाम x में त्रिकोणीय उपविभागों की वैकल्पिक संख्या",
                "संख्या: आयाम में त्रिकोणीय उप विभाजनों की वैकल्पिक संख्या और"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "sphere": {
            "description": "दिए गए त्रिज्या का एक क्षेत्र बनाएँ।",
            "params": [
                "संख्या: वृत्त त्रिज्या",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट 24 है",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट रूप से यह 16 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "cylinder": {
            "description": "त्रिज्या और ऊंचाई के पासे का एक सिलेंडर बनाएं।",
            "params": [
                "संख्या: सतह त्रिज्या",
                "संख्या: सिलेंडर ऊंचाई",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट 24 है",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट रूप से यह 16 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "cone": {
            "description": "त्रिज्या और ऊंचाई के पासे का एक शंकु बनाएं।",
            "params": [
                "संख्या: निचली सतह त्रिज्या",
                "संख्या: शंकु ऊंचाई",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट 24 है",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, सेगमेंट की अधिक से अधिक संख्या ज्यामिति चिकनी है, डिफ़ॉल्ट रूप से यह 16 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "ellipsoid": {
            "description": "किसी दिए गए त्रिज्या का एक दीर्घवृत्त ड्रा करें।",
            "params": [
                "संख्या: वृत्त त्रिज्या x",
                "संख्या: त्रिज्या और वृत्त",
                "संख्या: सर्कल त्रिज्या z",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, जितने सेगमेंट की ज्यामिति स्मूथ है, डिफॉल्ट 24 है। 150 से अधिक नंबरों से बचें जो ब्राउजर को ध्वस्त कर सकते हैं।",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, जितने सेगमेंट की ज्यामिति अधिक चिकनी है, डिफ़ॉल्ट रूप से यह 16 है। 150 से अधिक की संख्या से बचें जो ब्राउज़र को ध्वस्त कर सकता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "torus": {
            "description": "त्रिज्या और दी गई ट्यूब के साथ एक टोरायड ड्रा करें।",
            "params": [
                "संख्या: पूर्ण रिंग त्रिज्या",
                "संख्या: ट्यूब त्रिज्या",
                "संख्या: सर्कल त्रिज्या z",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, ज्यामिति सेगमेंट की संख्या अधिक से अधिक चिकनी है, डिफ़ॉल्ट रूप से यह 24 है।",
                "संख्या: वैकल्पिक, सेगमेंट की संख्या, ज्यामिति सेगमेंट की संख्या अधिक से अधिक चिकनी है, डिफ़ॉल्ट रूप से यह 16 है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "HALF_PI": {
            "description": "HALF_PI 1.57079632679489661923 मूल्य का एक गणितीय स्थिरांक है। यह एक वृत्त की परिधि और उसके व्यास के बीच का आधा अनुपात है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "PI": {
            "description": "पीआई 3.14159265358979323846 मूल्य का गणितीय स्थिरांक है। यह एक वृत्त की परिधि और उसके व्यास के बीच का अनुपात है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "QUARTER_PI": {
            "description": "QUARTER_PI 0.7853982 मूल्य का एक गणितीय स्थिरांक है। यह एक वृत्त की परिधि और उसके व्यास के बीच के अनुपात का एक चौथाई है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "TAU": {
            "description": "टीएयू TWO_PI का एक उपनाम है, जो गणितीय मूल्य 6.28318530717958647693 है। यह एक वृत्त की परिधि और उसके व्यास के बीच का अनुपात दोगुना है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "TWO_PI": {
            "description": "TWO_PI एक गणितीय स्थिरांक मान 6.28318530717958647693 है। यह एक वृत्त की परिधि और उसके व्यास के बीच का अनुपात दोगुना है। यह त्रिकोणमितीय फ़ंक्शन पाप () और कॉस () के साथ संयोजन में उपयोगी है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "preload": {
            "description": [
                "<a href=\"#/p5/setup\">setup()</a> से पहले सीधे कॉल किया जाता है, <a href=\"#/p5/preload\">preload()</a> फ़ंक्शन है अवरुद्ध तरीके से बाहरी फ़ाइलों के एसिंक्रोनस लोडिंग को संभालने के लिए उपयोग किया जाता है। यदि एक प्रीलोड फ़ंक्शन परिभाषित किया गया है, तो <a href=\"#/p5/setup\">setup()</a> तब तक प्रतीक्षा करेगा जब तक कि कोई भी लोड कॉल समाप्त न हो जाए . लोड कॉल के अलावा कुछ नहीं (<a href=\"#/p5/loadImage\">loadImage</a>, <a href=\"#/p5/loadJSON\">loadJSON</a>, <a href= \"#/p5/loadFont\">loadFont</a>, <a href=\"#/p5/loadStrings\">loadStrings</a>, आदि) प्रीलोड फ़ंक्शन के अंदर होना चाहिए। यदि एसिंक्रोनस लोडिंग है पसंदीदा, लोड विधियों को इसके बजाय <a href=\"#/p5/setup\">setup()</a> या कहीं भी कॉलबैक पैरामीटर के उपयोग के साथ कॉल किया जा सकता है। ",
                "डिफ़ॉल्ट रूप से पाठ \"loading...\" प्रदर्शित किया जाएगा। अपना स्वयं का लोडिंग पृष्ठ बनाने के लिए, अपने पृष्ठ में आईडी \"p5_loading\" के साथ एक HTML तत्व शामिल करें। अधिक जानकारी <a href=\"http:/ /bit.ly/2kQ6Nio\">यहां</a>।" 
        ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "setup": {
            "description": [
                "<a href=\"#/p5/setup\">setup()</a> फ़ंक्शन को प्रोग्राम शुरू होने पर एक बार कॉल किया जाता है। इसका उपयोग प्रारंभिक पर्यावरण गुणों जैसे स्क्रीन आकार और पृष्ठभूमि रंग को परिभाषित करने और मीडिया लोड करने के लिए किया जाता है जैसे कि प्रोग्राम शुरू होने पर इमेज और फोंट। प्रत्येक प्रोग्राम के लिए केवल एक <a href=\"#/p5/setup\">setup()</a> फ़ंक्शन हो सकता है और इसे इसके बाद फिर से कॉल नहीं किया जाना चाहिए प्रारंभिक निष्पादन। ",
                "ध्यान दें: <a href=\"#/p5/setup\">setup()</a> के अंतर्गत घोषित वैरिएबल <a href=\"#/p5/draw\">draw()</a> सहित अन्य कार्यों में पहुंच योग्य नहीं हैं।"
              ]
        },
        "draw": {
            "description": [
                "<a href=\"#/p5/setup\">setup()</a> के बाद सीधे कॉल किया जाता है, <a href=\"#/p5/draw\">draw()</a> लगातार काम करता है प्रोग्राम के बंद होने तक या <a href=\"#/p5/noLoop\">noLoop()</a> कॉल किए जाने तक अपने ब्लॉक के अंदर निहित कोड की पंक्तियों को निष्पादित करता है। नोट करें यदि <a href=\"#/p5 /noLoop\">noLoop()</a> को <a href=\"#/p5/setup\">setup()</a>, <a href=\"#/p5/draw\">draw()</a> में कॉल किया जाता है। रुकने से पहले एक बार निष्पादित किया जाएगा। <a href=\"#/p5/draw\">draw()</a> स्वचालित रूप से कॉल किया जाता है और इसे स्पष्ट रूप से कभी नहीं कहा जाना चाहिए। ",
                "इसे हमेशा <a href=\"#/p5/noLoop\">noLoop()</a>, <a href=\"#/p5/redraw\">redraw()</a> से नियंत्रित किया जाना चाहिए और <a href=\"#/p5/loop\">loop()</a>। <a href=\"#/p5/noLoop\">noLoop()</a> के बाद कोड को में बंद कर देता है। <a href=\"#/p5/draw\">draw()</a> क्रियान्वित होने से, <a href=\"#/p5/redraw\">redraw()</a> कोड को <a href=\"#/p5/draw\">draw()</a> एक बार निष्पादित करने के लिए, और <a href=\"#/p5/loop\">loop()</a> कोड को अंदर कर देगा <a href=\"#/p5/draw\">draw()</a> लगातार क्रियान्वित करना फिर से शुरू करने के लिए। ",
                "प्रत्येक सेकंड में <a href=\"#/p5/draw\">draw()</a> निष्पादित होने की संख्या को <a href=\"#/p5/frameRate\">frameRate()</a> से नियंत्रित किया जा सकता है समारोह। ",
                "प्रत्येक स्केच के लिए केवल एक <a href=\"#/p5/draw\">draw()</a> फ़ंक्शन हो सकता है, और <a href=\"#/p5/draw\">draw()</a>हो सकता है। मौजूद होना चाहिए यदि आप चाहते हैं कि कोड लगातार चलता रहे, या <a href=\"#/p5/mousePressed\">mousePressed()</a> जैसी घटनाओं को संसाधित करने के लिए। कभी-कभी, आपके पास एक खाली हो सकता है अपने प्रोग्राम में <a href=\"#/p5/draw\">draw()</a> पर कॉल करें, जैसा कि ऊपर दिए गए उदाहरण में दिखाया गया है। ",
                "यह ध्यान रखना महत्वपूर्ण है कि ड्रॉइंग कोऑर्डिनेट सिस्टम प्रत्येक ",
                "<a href=\"#/p5/draw\">draw()</a> कॉल की शुरुआत में रीसेट हो जाएगा। यदि कोई परिवर्तन के भीतर किया जाता है<a href=\"#/p5/draw\">draw()</a> (उदा: स्केल, रोटेट, ट्रांसलेट), उनके प्रभाव <a href=\"#/p5/draw\">draw()</a>की शुरुआत में पूर्ववत हो जाएंगे। , इसलिए समय के साथ परिवर्तन जमा नहीं होंगे। दूसरी ओर, लागू की गई शैली (उदा: भरण, स्ट्रोक, आदि) प्रभावी बनी रहेगी।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "remove": {
            "description": "पी 5 के स्केच को पूरी तरह से हटा दें। यह कैनवास और p5.js. द्वारा बनाए गए किसी भी अन्य तत्व को हटा देगा। यह ड्राइंग लूप को भी रोक देगा और किसी भी वैश्विक संपत्ति या विंडो की विधि को अनलिंक कर देगा। यदि आप एक नया स्केच p5 बनाना चाहते हैं तो वैरिएबल p5 को छोड़ दें। यदि आप चाहते हैं, तो आप इस चर को हटाने के लिए p5 = null को परिभाषित कर सकते हैं।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "noLoop": {
            "description": [
                "p5.js को <a href=\"#/p5/draw\">draw()</a> में लगातार कोड निष्पादित करने से रोकता है। यदि <a href=\"#/p5/loop\">loop()</a> को कॉल किया जाता है, <a href=\"#/p5/draw\">draw()</a> में कोड लगातार चलने लगता है। यदि <a href=\"#/p5/ noLoop\">noLoop()</a> <a href=\"#/p5/setup\">setup()</a> में, यह ब्लॉक के अंदर की आखिरी लाइन होनी चाहिए।",
                "जब <a href=\"#/p5/noLoop\">noLoop()</a> का उपयोग किया जाता है, तो <a href=\"#/p5 जैसे ईवेंट हैंडलिंग फ़ंक्शंस के अंदर स्क्रीन में हेरफेर या एक्सेस करना संभव नहीं है /mousePressed\">mousePressed()</a> या <a href=\"#/p5/keyPressed\">keyPressed()</a>। इसके बजाय, <a href=\"#/ p5/redraw\">redraw()</a> या <a href=\"#/p5/loop\">loop()</a>, जो <a href=\"#/p5/draw \">draw()</a> चलेगा, जो स्क्रीन को ठीक से अपडेट कर सकता है। इसका मतलब है कि जब <a href=\"#/p5/noLoop\">noLoop()</a> को कॉल किया गया है, तो कोई भी ड्रॉइंग नहीं कर सकता होता है, और <a href=\"#/p5/saveFrames\">saveFrames()</a> या <a href=\"#/p5/loadPixels\">loadPixels()</a> जैसे कार्य नहीं हो सकते हैं इस्तेमाल किया गया। ",
                "ध्यान दें कि अगर स्केच का आकार बदला जाता है, तो <a href=\"#/p5/redraw\">redraw()</a> को स्केच को अपडेट करने के लिए <a href=\"#/p5/noLoop\">noLoop()</a>के बाद भी कॉल किया जाएगा। निर्दिष्ट किया गया है। अन्यथा, <a href=\"#/p5/loop\">loop()</a> को कॉल किए जाने तक स्केच एक विषम स्थिति में प्रवेश करेगा। " ,
                "loop() की वर्तमान स्थिति की जांच करने के लिए <a href=\"#/p5/isLooping\">isLooping()</a> का उपयोग करें।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "loop": {
            "description": [
                "डिफ़ॉल्ट रूप से, p5.js draw() के माध्यम से लगातार लूप करता है, इसके भीतर कोड निष्पादित करता है। हालांकि, <a href=\"#/p5/draw\">draw()</a> लूप को कॉल करके रोका जा सकता है <a href=\"#/p5/noLoop\">noLoop()</a>। उस स्थिति में, <a href=\"#/p5/draw\">draw()</a> लूप कर सकते हैं loop() के साथ फिर से शुरू करें। ",
                "अंदर के setup() से loop() को कॉल करने से बचें।",
                "loop() की वर्तमान स्थिति की जांच करने के लिए <a href=\"#/p5/isLooping\">isLooping()</a> का उपयोग करें।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "push": {
            "description": [
                "<a href=\"#/p5/push\">push()</a> फ़ंक्शन वर्तमान आरेखण शैली सेटिंग्स और परिवर्तनों को सहेजता है, जबकि <a href=\"#/p5/pop\">pop()</a> इन सेटिंग्स को पुनर्स्थापित करता है। ध्यान दें कि ये फ़ंक्शन हमेशा एक साथ उपयोग किए जाते हैं। वे आपको शैली और परिवर्तन सेटिंग्स को बदलने की अनुमति देते हैं और बाद में जो आपके पास था उस पर वापस लौटते हैं। जब एक नया राज्य शुरू होता है <a href=\"# /p5/push\">push()</a>, यह वर्तमान शैली पर आधारित है और जानकारी को रूपांतरित करता है। <a href=\"#/p5/push\">push()</a> और <a href=\"#/p5/pop\">pop()</a> अधिक नियंत्रण प्रदान करने के लिए कार्यों को एम्बेड किया जा सकता है। (प्रदर्शन के लिए दूसरा उदाहरण देखें।) ",
                "<a href=\"#/p5/push\">push()</a> निम्नलिखित कार्यों द्वारा नियंत्रित वर्तमान परिवर्तन स्थिति और शैली सेटिंग्स से संबंधित जानकारी संग्रहीत करता है: <a href=\"#/p5/fill \">भरें()</a>, <a href=\"#/p5/noFill\">noFill()</a>, <a href=\"#/p5/noStroke\">noStroke() </a>, <a href=\"#/p5/stroke\">stroke()</a>, <a href=\"#/p5/tint\">tint()</a>, <a href=\"#/p5/noTint\">noTint()</a>, <a href=\"#/p5/strokeWeight\">strokeWeight()</a>, <a href=\"# /p5/strokeCap\">strokeCap()</a>, <a href=\"#/p5/strokeJoin\">strokeJoin()</a>, <a href=\"#/p5/imageMode\" >imageMode()</a>, <a href=\"#/p5/rectMode\">rectMode()</a>, <a href=\"#/p5/ellipseMode\">ellipseMode()</a>, <a href=\"#/p5/colorMode\">colorMode()</a>, <a href=\"#/p5/textAlign\">textAlign()</a>, <a href =\"#/p5/textFont\">textFont()</a>, <a href=\"#/p5/textSize\">textSize()</a>, <a href=\"#/p5 /textLeading\">textLeading()</a>, <a href=\"#/p5/applyMatrix\">applyMatrix()</a>, <a href=\"#/p5/resetMatrix\">resetMatrix ()</a>, <a href=\"#/p5/rotate\">rotate()</a>, <a href=\"#/p5/scale\">scale()</a>, <a href=\"#/p5/shearX\">shearX()</a>, <a href=\"#/p5/shearY\">shearY()</a>, <a href=\"#/p5/translate\">translate()</a>, <a href=\" #/p5/noiseSeed\">noiseSeed()</a>. ",
                "WEBGL मोड में अतिरिक्त स्टाइल सेटिंग्स संग्रहीत की जाती हैं। इन्हें निम्नलिखित कार्यों द्वारा नियंत्रित किया जाता है: <a href=\"#/p5/setCamera\">setCamera()</a>, <a href=\"#/p5/ ambientLight\">ambientLight ()</a>, <a href=\"#/p5/directionLight\">directionLight()</a>, <a href=\"#/p5/pointLight\">pointLight()</a>, <a href=\"#/p5/texture\">texture()</a>, <a href=\"#/p5/specularMaterial\">specularMaterial()</a>, <a href=\"#/p5/shininess\">shininess()</a>, <a href=\"#/p5/normalMaterial\">normalMaterial()</a> और <a href=\" #/p5/shader\">shader()</a>।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "pop": {
            "description": [
                "<a href=\"#/p5/push\">push()</a> फ़ंक्शन वर्तमान आरेखण शैली सेटिंग्स और परिवर्तनों को सहेजता है, जबकि <a href=\"#/p5/pop\">pop()</a> इन सेटिंग्स को पुनर्स्थापित करता है। ध्यान दें कि ये फ़ंक्शन हमेशा एक साथ उपयोग किए जाते हैं। वे आपको शैली और परिवर्तन सेटिंग्स को बदलने की अनुमति देते हैं और बाद में जो आपके पास था उस पर वापस लौटते हैं। जब एक नया राज्य शुरू होता है <a href=\"# /p5/push\">push()</a>, यह वर्तमान शैली पर आधारित है और जानकारी को रूपांतरित करता है। <a href=\"#/p5/push\">push()</a> और <a href=\"#/p5/pop\">pop()</a> अधिक नियंत्रण प्रदान करने के लिए कार्यों को एम्बेड किया जा सकता है। (प्रदर्शन के लिए दूसरा उदाहरण देखें।) ",
                "<a href=\"#/p5/push\">push()</a> निम्नलिखित कार्यों द्वारा नियंत्रित वर्तमान परिवर्तन स्थिति और शैली सेटिंग्स से संबंधित जानकारी संग्रहीत करता है: <a href=\"#/p5/fill \">भरें()</a>, <a href=\"#/p5/noFill\">noFill()</a>, <a href=\"#/p5/noStroke\">noStroke() </a>, <a href=\"#/p5/stroke\">stroke()</a>, <a href=\"#/p5/tint\">tint()</a>, < a href=\"#/p5/noTint\">noTint()</a>, <a href=\"#/p5/strokeWeight\">strokeWeight()</a>, <a href=\"# /p5/स्ट्रोककैप\">स्ट्रोककैप()</a>, <a href=\"#/p5/stokeJoint\">strokeJoint()</a>, <a href=\"#/p5/imageMode\" >imageMode()</a>, <a href=\"#/p5/rectMode\">rectMode()</a>, <a href=\"#/p5/ellipseMode\">ellipseMode()</a> a>, <a href=\"#/p5/colorMode\">colorMode()</a>, <a href=\"#/p5/textAlign\">textAlign()</a>, <a href =\"#/p5/textFont\">textFont()</a>, <a href=\"#/p5/textSize\">textSize()</a>, <a href=\"#/p5 /textLeading\">textLeading()</a>, <a href=\"#/p5/applyMatrix\">applyMatrix()</a>, <a href=\"#/p5/resetMatrix\">resetMatrix ()</a>, <a href=\"#/p5/rotate\">rotate()</a>, <a href=\"#/p5/scale\">scale()</a>, <a href=\"#/p5/shearX\">shearX()</a>, <a href=\"#/p5/shearY\">shearY()</a>, <a href=\"#/p5/translate\">translate()</a>, <a href=\" #/p5/noiseSeed\">noiseSeed()</a>. ",
                "WEBGL मोड में अतिरिक्त स्टाइल सेटिंग्स संग्रहीत की जाती हैं। इन्हें निम्नलिखित कार्यों द्वारा नियंत्रित किया जाता है: <a href=\"#/p5/setCamera\">setCamera()</a>, <a href=\"#/p5/ ambientLight\">ambientLight()</a>, <a href=\"#/p5/directionLight\">directionLight()</a>, <a href=\"#/p5/pointLight\">pointLight()</a>, <a href=\"#/p5/texture\">texture()</a>, <a href=\"#/p5/specularMaterial\">specularMaterial()</a>, <a href=\"#/p5/shininess\">चमकता()</a>, <a href=\"#/p5/normalMaterial\">normalMaterial()</a> और <a href=\" #/p5/shader\">shader()</a>।"
              ]
        },
        "redraw": {
            "description": [
                "कोड को एक बार <a href=\"#/p5/draw\">draw()</a> के भीतर निष्पादित करता है। यह फ़ंक्शन प्रोग्राम को केवल आवश्यक होने पर ही डिस्प्ले विंडो को अपडेट करने की अनुमति देता है, उदाहरण के लिए जब कोई ईवेंट पंजीकृत किया जाता है <a href=\"#/p5/mousePressed\">mousePressed()</a> या <a href=\"#/p5/keyPressed\">keyPressed()</a> होता है। ",
                "किसी प्रोग्राम की संरचना में, <a href=\"#/p5/mousePressed\" जैसे ईवेंट में </a> <a href=\"#/p5/redraw\">redraw()</a> को कॉल करना ही समझदारी है। >mousePressed()</a>. ऐसा इसलिए है क्योंकि <a href=\"#/p5/redraw\">redraw()</a> नहीं चलता है <a href=\"#/p5/draw\"> draw() </a> तुरंत (यह केवल एक ध्वज सेट करता है जो इंगित करता है कि एक अद्यतन की आवश्यकता है)। ",
                "<a href=\"#/p5/redraw\">redraw()</a> फ़ंक्शन ठीक से काम नहीं करता है जब <a href=\"#/p5/draw\">draw()</a>के अंदर कॉल किया जाता है।. एनिमेशन को सक्षम/अक्षम करने के लिए, <a href=\"#/p5/loop\">loop()</a> और <a href=\"#/p5/noLoop\">noLoop()</a>का उपयोग करें।",
                "इसके अलावा आप प्रति मेथड कॉल के लिए रेड्रा की संख्या निर्धारित कर सकते हैं। बस एक पूर्णांक को एकल पैरामीटर के रूप में जोड़ें।"
              ],
            "params": [
                "पूर्णांक: एन-बार redraws। डिफ़ॉल्ट रूप से मान 1 है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "frameCount": {
            "description": "सिस्टम वैरिएबल <a href=\"#/p5/frameCount\">frameCount</a> में उन फ़्रेमों की संख्या शामिल है जो प्रोग्राम शुरू होने के बाद से प्रदर्शित किए गए हैं। अंदर <a href=\"#/p5/setup \">setup()</a> मान 0 है, ड्रॉ के पहले पुनरावृत्ति के बाद यह 1 है, आदि।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "focused": {
            "description": "पुष्टि करें कि क्या p5.js प्रोग्राम की विंडो फ़ोकस में है, जिसका अर्थ है कि स्केच माउस या कीबोर्ड से प्रविष्टियाँ स्वीकार करेगा। यह चर सच्चा (सच्चा) है यदि खिड़की फोकस में है और गलत (गलत) है तो नहीं।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "cursor": {
            "description": "कर्सर को एक पूर्वनिर्धारित प्रतीक या एक छवि पर सेट करता है, या यदि पहले से छिपा हुआ है तो इसे दृश्यमान बनाता है। यदि आप किसी छवि को कर्सर के रूप में सेट करने का प्रयास कर रहे हैं, तो अनुशंसित आकार 16x16 या 32x32 पिक्सेल है। पैरामीटर x और y के मान होना चाहिए छवि के आयामों से कम।",
            "params": [
                "नंबर | लगातार: ARROW, CROSS, हाथ, मूव, कपड़ा, या WAIT, या एक छवि का पता हो सकता है",
                "संख्या: क्षैतिज सक्रिय कर्सर बिंदु",
                "संख्या: कर्सर का ऊर्ध्वाधर सक्रिय बिंदु"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "frameRate": {
            "description": [
                "प्रत्येक सेकंड में प्रदर्शित होने वाले फ़्रेमों की संख्या निर्दिष्ट करता है। उदाहरण के लिए, फ़ंक्शन कॉल frameRate(30) एक सेकंड में 30 बार ताज़ा करने का प्रयास करेगा। यदि प्रोसेसर निर्दिष्ट दर को बनाए रखने के लिए पर्याप्त तेज़ नहीं है, तो फ़्रेम दर नहीं होगी हासिल किया। फ्रेम दर को <a href=\"#/p5/setup\">setup()</a> के भीतर सेट करने की अनुशंसा की जाती है। डिफ़ॉल्ट फ्रेम दर प्रदर्शन की फ्रेम दर पर आधारित होती है (यहां इसे \" भी कहा जाता है) ताज़ा दर\"), जो अधिकांश कंप्यूटरों पर 60 फ़्रेम प्रति सेकंड पर सेट है। 24 फ़्रेम प्रति सेकंड (फ़िल्मों के लिए सामान्य) या इससे अधिक की फ़्रेम दर सुचारू एनिमेशन के लिए पर्याप्त होगी। यह setFrameRate(val) के समान है। ",
                "कॉलिंग <a href=\"#/p5/frameRate\">frameRate()</a> बिना किसी तर्क के वर्तमान फ्रैमरेट लौटाती है। ड्रा फ़ंक्शन को मान वापस करने से पहले कम से कम एक बार चलना चाहिए। यह वही है <a href=\"#/p5/getFrameRate\">getFrameRate()</a> के रूप में। ",
                "<a href=\"#/p5/frameRate\">frameRate()</a> को ऐसे तर्कों के साथ कॉल करना जो संख्याओं के प्रकार के नहीं हैं या जो सकारात्मक नहीं हैं, वर्तमान फ्रैमरेट भी लौटाते हैं।"
              ],
            "params": [
                "संख्या: हर सेकंड दिखाए जाने वाले फ़्रेम की संख्या।"
            ],
            "returns": "वर्तमान फ्रेम दर (दूसरा फ्रेम रेट)"
        },
        "noCursor": {
            "description": "कर्सर छिपाएं।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "displayWidth": {
            "description": [
                "सिस्टम वैरिएबल जो डिफ़ॉल्ट <a href=\"#/p5/pixelDensity\">pixelDensity</a> के अनुसार स्क्रीन डिस्प्ले की चौड़ाई को स्टोर करता है। इसका उपयोग किसी भी डिस्प्ले साइज पर फुल-स्क्रीन प्रोग्राम चलाने के लिए किया जाता है। वास्तविक स्क्रीन आकार वापस करने के लिए, इसे पिक्सेल घनत्व से गुणा करें।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "displayHeight": {
            "description": [
                "सिस्टम वैरिएबल जो डिफ़ॉल्ट <a href=\"#/p5/pixelDensity\">pixelDensity</a> के अनुसार स्क्रीन डिस्प्ले की ऊंचाई को स्टोर करता है। इसका उपयोग किसी भी डिस्प्ले साइज पर फुल-स्क्रीन प्रोग्राम चलाने के लिए किया जाता है। वास्तविक स्क्रीन आकार वापस करने के लिए, इसे पिक्सेल घनत्व से गुणा करें।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "windowWidth": {
            "description": "सिस्टम वैरिएबल जो विंडो की आंतरिक चौड़ाई को स्टोर करता है, window.innerWidth के बराबर।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "windowHeight": {
            "description": "सिस्टम वैरिएबल जो विंडो की आंतरिक ऊंचाई को स्टोर करता है, window.innerHeight के बराबर।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "windowResized": {
            "description": [
                "<a href=\"#/p5/windowResized\">windowResized()</a> फ़ंक्शन हर बार ब्राउज़र विंडो का आकार बदलने पर एक बार कॉल किया जाता है। कैनवास का आकार बदलने या इसके लिए कोई अन्य समायोजन करने के लिए यह एक अच्छी जगह है नई विंडो के आकार को समायोजित करें।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "width": {
            "description": [
                "सिस्टम वैरिएबल जो ड्रॉइंग कैनवास की चौड़ाई को स्टोर करता है। यह मान <a href=\"#/p5/createCanvas\">createCanvas()</a> फ़ंक्शन के पहले पैरामीटर द्वारा सेट किया गया है। उदाहरण के लिए, फ़ंक्शन कॉल createCanvas(320, 240) चौड़ाई चर को मान 320 पर सेट करता है। चौड़ाई का मान डिफ़ॉल्ट रूप से 100 हो जाता है यदि <a href=\"#/p5/createCanvas\">createCanvas()</a> का उपयोग नहीं किया जाता है कार्यक्रम।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "height": {
            "description": [
                "सिस्टम वैरिएबल जो ड्राइंग कैनवास की ऊंचाई को स्टोर करता है। यह मान <a href=\"#/p5/createCanvas\">createCanvas()</a> फ़ंक्शन के दूसरे पैरामीटर द्वारा सेट किया गया है। उदाहरण के लिए, फ़ंक्शन कॉल createCanvas(320, 240) ऊंचाई चर को 240 मान पर सेट करता है। ऊंचाई का मान डिफ़ॉल्ट रूप से 100 हो जाता है यदि <a href=\"#/p5/createCanvas\">createCanvas()</a> का उपयोग नहीं किया जाता है कार्यक्रम।"
              ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "fullscreen": {
            "description": [
                "यदि तर्क दिया गया है, तो तर्क के मूल्य के आधार पर स्केच को पूर्णस्क्रीन पर सेट करता है या नहीं। यदि कोई तर्क नहीं दिया जाता है, तो वर्तमान पूर्णस्क्रीन स्थिति लौटाता है। ध्यान दें कि ब्राउज़र प्रतिबंधों के कारण इसे केवल उपयोगकर्ता इनपुट पर ही कॉल किया जा सकता है, उदाहरण के लिए , माउस प्रेस पर नीचे दिए गए उदाहरण की तरह।"
              ],
            "params": [
                "बुलियन: परिभाषित करता है कि स्केच फुल स्क्रीन होना चाहिए या नहीं।"
            ],
            "returns": "बूलियन: वर्तमान पूर्ण स्क्रीन स्थिति"
        },
        "pixelDensity": {
            "description": [
                "उच्च पिक्सेल घनत्व डिस्प्ले के लिए पिक्सेल स्केलिंग सेट करता है। डिफ़ॉल्ट रूप से पिक्सेल घनत्व प्रदर्शन घनत्व से मेल खाने के लिए सेट होता है, इसे बंद करने के लिए पिक्सेल घनत्व (1) पर कॉल करें। <a href=\"#/p5/pixelDensity\">pixelDensity() </a>पर कॉल करना बिना किसी तर्क के स्केच का वर्तमान पिक्सेल घनत्व लौटाता है।"
              ],
            "params": [
                "संख्या: यदि स्केच को छोटा और कितना होना चाहिए।"
            ],
            "returns": "संख्या: स्केच का वर्तमान पिक्सेल घनत्व"
        },
        "displayDensity": {
            "description": "वर्तमान मॉनीटर का पिक्सेल घनत्व लौटाता है जिसमें स्केच चल रहा होता है।",
            "returns": "संख्या: मॉनिटर की वर्तमान पिक्सेल घनत्व"
        },
        "getURL": {
            "description": "वर्तमान URL लौटाता है।",
            "returns": "स्ट्रिंग: URL"
        },
        "getURLPath": {
            "description": "एक सरणी के रूप में URL लौटाता है",
            "returns": "फिक्स: पते के घटक"
        },
        "getURLParams": {
            "description": "ऑब्जेक्ट के रूप में वर्तमान URL के मापदंडों को लौटाता है।",
            "returns": "ऑब्जेक्ट: URL पैरामीटर"
        },
        "createCanvas": {
            "description": [
                "दस्तावेज़ में एक कैनवास तत्व बनाता है, और इसके आयामों को पिक्सेल में सेट करता है। इस विधि को सेटअप के प्रारंभ में केवल एक बार कॉल किया जाना चाहिए। <a href=\"#/p5/createCanvas\">createCanvas</a>को कॉल करना  एक स्केच में एक से अधिक बार बहुत अप्रत्याशित व्यवहार होगा। यदि आप एक से अधिक ड्राइंग कैनवास चाहते हैं तो आप <a href=\"#/p5/createGraphics\">createGraphics</a> का उपयोग कर सकते हैं (डिफ़ॉल्ट रूप से छिपा हुआ लेकिन यह दिखाया जा सकता है)। ",
                "महत्वपूर्ण नोट: 2D मोड में (अर्थात जब <code>p5.Renderer</code> सेट नहीं है) मूल (0,0) स्क्रीन के ऊपर बाईं ओर स्थित है। 3D मोड में (अर्थात जब <code> p5.Renderer</code> <code>WEBGL</code> पर सेट है), मूल कैनवास के केंद्र में स्थित है। <a href=\"https://github.com/processing/p5.js/issues/1545\">this issue</a> अधिक जानकारी के लिए। ",
                "सिस्टम चर की चौड़ाई और ऊंचाई इस फ़ंक्शन को दिए गए पैरामीटर द्वारा निर्धारित की जाती है। यदि <a href=\"#/p5/createCanvas\">createCanvas()</a> का उपयोग नहीं किया जाता है, तो विंडो को एक डिफ़ॉल्ट दिया जाएगा 100x100 पिक्सेल का आकार।",
                "कैनवास को स्थान देने के और तरीकों के लिए, <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'> कैनवस की स्थिति</a> विकी पृष्ठ देखें।"
              ],
            "params": [
                "संख्या: कैनवास की चौड़ाई",
                "संख्या: कैनवास ऊंचाई",
                "लगातार: P2D या WEBGL"
            ],
            "returns": "ऑब्जेक्ट: उत्पन्न कैनवास"
        },
        "resizeCanvas": {
            "description": "दी गई चौड़ाई और ऊंचाई के लिए रेखा का आकार बदलें। कैनवास को हटा दिया जाएगा और ड्रा () फ़ंक्शन को तुरंत बुलाया जाएगा, जिससे स्केच नए कैनवास को फिट कर सके",
            "returns": "p5 ऑब्जेक्ट"
        },
        "noCanvas": {
            "description": "P5 के स्केच के लिए डिफ़ॉल्ट कैनवास निकालें जिसमें कैनवास की आवश्यकता नहीं है।",
            "returns": "p5 ऑब्जेक्ट"
        },
        "createGraphics": {
            "description": "एक नया ऑब्जेक्ट p5.Renderer बनाएं और वापस करें। यदि आपको ग्राफिक बफर में ऑफ-स्क्रीन खींचने की आवश्यकता है तो इस वर्ग का उपयोग करें। दो पैरामीटर पिक्सल में चौड़ाई और ऊंचाई को परिभाषित करते हैं।",
            "params": [
                "संख्या: ऑफ-स्क्रीन ग्राफिक बफर चौड़ाई",
                "नंबर: ग्राफिक बफर स्क्रीन से ऊंचाई",
                "लगातार: P2D या WEBGL, यदि परिभाषित नहीं है तो डिफ़ॉल्ट रूप से P2D है"
            ],
            "returns": "स्क्रीन पर ग्राफिक बफर"
        },
        "blendMode": {
            "description": [
                "डिस्प्ले विंडो में पिक्सल को परिभाषित मोड के अनुसार ब्लेंड करता है। सोर्स पिक्सल (ए) को डिस्प्ले विंडो में पहले से मौजूद पिक्सल के साथ ब्लेंड करने के लिए निम्नलिखित मोड का विकल्प है: <ul> <li> <code>BLEND</code> - रंगों का रैखिक प्रक्षेप: C = A*factor + B. <b>यह डिफ़ॉल्ट सम्मिश्रण मोड है।</b></li> <li><code>ADD</code > - A और B का योग</li> <li><code>डार्केस्ट</code> - केवल सबसे गहरा रंग सफल होता है: C = min(A*factor, B).</li> <li><code> सबसे हल्का</code> - केवल सबसे हल्का रंग सफल होता है: C = max(A*factor, B).</li> <li><code>DIFFERENCE</code> - अंतर्निहित छवि से रंगों को घटाएं।</li> < li><code>EXCLUSION</code> - <code>DIFFERENCE</code> के समान, लेकिन कम चरम।</li> <li><code>MULTIPLY</code> - रंगों को गुणा करें, परिणाम हमेशा होगा गहरा।</li> <li><code>SCREEN</code> - विपरीत गुणा, रंगों के व्युत्क्रम मानों का उपयोग करता है।</li> <li><code>REPLACE</code> - पिक्सल पूरी तरह से दूसरों की जगह लेते हैं और अल्फ़ा (पारदर्शिता) मानों का उपयोग न करें।</li> <li><code>REMOVE</code> - A के अल्फा स्ट्रेंथ के साथ B से पिक्सेल निकालता है।</li> <li><code>Overlay</code> - <code>MULTIPLY</code> का मिश्रण और <कोड>स्क्रीन </कोड>। डार्क वैल्यू को गुणा करता है, और लाइट वैल्यू को स्क्रीन करता है। <em>(2D)</em></li> <li><code>HARD_LIGHT</code> - <code>SCREEN</code> जब ५०% से अधिक ग्रे, <code>MULTIPLY</code> जब निचला। <em>(2D)</em></li> <li><code>SOFT_LIGHT</code> - <code>DARKEST</code> और <code>LIGHTEST</code> का मिश्रण। <code>OVERLAY</code> की तरह काम करता है, लेकिन उतना कठोर नहीं। <em>(2D)</em> </li> <li><code>DODGE</code> - हल्के टोन को हल्का करता है और कंट्रास्ट को बढ़ाता है, अंधेरे को नज़रअंदाज़ करता है। <em>(2D)</em></li> <li><code>BURN</code> - गहरे रंग के क्षेत्र लगाए जाते हैं, कंट्रास्ट को बढ़ाते हुए, रोशनी को नज़रअंदाज़ किया जाता है। <em>(2D)</em></li> <li><code>सबट्रैक्ट</code> - A और B के शेष <em>(3D)</em></li> </ul> " ,
                "<em>(2D)</em> इंगित करता है कि यह मिश्रण मोड <b>केवल</b> 2D रेंडरर में काम करता है। <em>(3D)</em> इंगित करता है कि यह मिश्रण मोड <b>केवल< /b> WEBGL रेंडरर में काम करता है।"
              ],
            "params": [
                "लगातार: कैनवास सम्मिश्रण मोड"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "applyMatrix": {
            "description": "मापदंडों के अनुसार वर्तमान मैट्रिक्स को एक से गुणा करें। यह बहुत धीमा है क्योंकि आप परिवर्तन के व्युत्क्रम की गणना करने का प्रयास करेंगे, इसलिए जब संभव हो तो इससे बचें",
            "params": [
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं",
                "संख्या: संख्याएँ जो 3x2 मैट्रिक्स को गुणा करने के लिए परिभाषित करती हैं"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "resetMatrix": {
            "description": "वर्तमान मैट्रिक्स को पहचान मैट्रिक्स के साथ बदलें",
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotate": {
            "description": [
                "कोण पैरामीटर द्वारा निर्दिष्ट राशि से एक आकृति को घुमाता है। यह फ़ंक्शन <a href=\"#/p5/angleMode\">angleMode</a> के लिए जिम्मेदार है, इसलिए कोणों को रेडियन या डिग्री में दर्ज किया जा सकता है। ",
                "ऑब्जेक्ट्स को हमेशा उनकी सापेक्ष स्थिति के आसपास मूल में घुमाया जाता है और सकारात्मक संख्याएं वस्तुओं को एक दक्षिणावर्त दिशा में घुमाती हैं। परिवर्तन उन सभी चीजों पर लागू होता है जो फ़ंक्शन के बाद और बाद में कॉल के प्रभाव को जमा करते हैं। उदाहरण के लिए, रोटेट (HALF_PI) को कॉल करना और फिर घुमाएं (HALF_PI) रोटेट (PI) के समान है। <a href=\"#/p5/draw\">draw()</a> फिर से शुरू होने पर सभी रूपांतरण रीसेट हो जाते हैं। ",
                "तकनीकी रूप से, <a href=\"#/p5/rotate\">rotate()</a> वर्तमान रूपांतरण मैट्रिक्स को एक रोटेशन मैट्रिक्स से गुणा करता है। इस फ़ंक्शन को <a href=\"#/p5/push\">push()</a>द्वारा और नियंत्रित किया जा सकता है।  और <a href=\"#/p5/pop\">pop()</a>।"
              ],
            "params": [
                "कोण: रोटेशन का कोण, रेडियन या डिग्री में निर्दिष्ट, कोण पर निर्भर करता है ()",
                "संख्या: रेडियन कोण",
                "p5.Vector | व्यवस्था: अक्ष जिस पर वह घूमता है"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotateX": {
            "description": [
                "कोण पैरामीटर में निर्दिष्ट राशि द्वारा एक्स अक्ष के चारों ओर एक आकृति घुमाता है। कोणों को रेडियंस या डिग्री में दर्ज किया जा सकता है।",
                "ऑब्जेक्ट हमेशा अपनी सापेक्ष स्थिति के आसपास मूल के लिए घुमाए जाते हैं और सकारात्मक संख्याएं वस्तुओं को दक्षिणावर्त दिशा में घुमाती हैं। सभी रूपांतरण रीसेट हो जाते हैं जब <a href=\"#/p5/draw\">draw()</a> फिर से शुरू होता है ।"
              ],
            "params": [
                "संख्या: रेडियन कोण"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotateY": {
            "description": [
                "कोण पैरामीटर में निर्दिष्ट राशि द्वारा Z अक्ष के चारों ओर एक आकृति को घुमाता है। कोणों को रेडियन या डिग्री में दर्ज किया जा सकता है।",
                "यह विधि केवल WEBGL मोड में काम करती है।",
                "ऑब्जेक्ट हमेशा अपनी सापेक्ष स्थिति के आसपास मूल के लिए घुमाए जाते हैं और सकारात्मक संख्याएं वस्तुओं को दक्षिणावर्त दिशा में घुमाती हैं। सभी रूपांतरण रीसेट हो जाते हैं जब <a href=\"#/p5/draw\">draw()</a> फिर से शुरू होता है ।"
        ],
            "params": [
                "संख्या: रेडियन कोण"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "rotateZ": {
            "description": "Z अक्ष के चारों ओर घूमता है। केवल WEBGL मोड में उपलब्ध है।",
            "params": [
                "संख्या: रेडियन कोण"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "scale": {
            "description": [
                "शीर्षों को विस्तारित या अनुबंधित करके आकार के आकार को बढ़ाता या घटाता है। वस्तुएं हमेशा अपने सापेक्ष मूल से समन्वय प्रणाली तक स्केल करती हैं। स्केल मान दशमलव प्रतिशत के रूप में निर्दिष्ट होते हैं। उदाहरण के लिए, फ़ंक्शन कॉल स्केल (2.0) एक के आयाम को बढ़ाता है 200% से आकार। ",
                "रूपांतरण हर उस चीज़ पर लागू होता है जो फ़ंक्शन के बाद और बाद में होने वाली कॉल के प्रभाव को गुणा करती है। उदाहरण के लिए, कॉलिंग स्केल (2.0) और फिर स्केल (1.5) स्केल (3.0) के समान है। यदि <a href=\"#/ p5/scale\">scale()</a> को <a href=\"#/p5/draw\">draw()</a> में कॉल किया जाता है, जब लूप दोबारा शुरू होता है तो ट्रांसफॉर्मेशन रीसेट हो जाता है।",
                "Z पैरामीटर के साथ इस फ़ंक्शन का उपयोग करना केवल WEBGL मोड में उपलब्ध है। इस फ़ंक्शन को <a href=\"#/p5/push\">push()</a> और <a href=\"#/p5/pop\">pop()</a>के साथ और अधिक नियंत्रित किया जा सकता है।"
              ],
            "params": [
                "नंबर | p5.Vector | व्यवस्था: ऑब्जेक्ट के पैमाने पर प्रतिशत, या एक्स तर्क पर ऑब्जेक्ट के पैमाने पर प्रतिशत अगर कई तर्क दिए जाते हैं",
                "संख्या: y अक्ष पर ऑब्जेक्ट को स्केल करने के लिए प्रतिशत",
                "संख्या: z अक्ष पर ऑब्जेक्ट को स्केल करने के लिए प्रतिशत (केवल WEBGL मोड में)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "shearX": {
            "description": [
                "कोण पैरामीटर द्वारा निर्दिष्ट राशि द्वारा एक्स-अक्ष के चारों ओर एक आकृति को कतरता है। कोणों को वर्तमान कोण मोड में निर्दिष्ट किया जाना चाहिए। वस्तुओं को हमेशा उनकी सापेक्ष स्थिति के आसपास मूल और सकारात्मक संख्याएं घड़ी की दिशा में वस्तुओं को कतरनी करती हैं।",
                "परिवर्तन सब कुछ पर लागू होता है जो फ़ंक्शन के बाद और बाद में कॉल के प्रभाव को जमा करता है। उदाहरण के लिए, शीयरएक्स (पीआई/2) और फिर शीयरएक्स (पीआई/2) को कॉल करना शीयरएक्स (पीआई) के समान है। यदि <a href= \"#/p5/shearX\">shearX()</a> को <a href=\"#/p5/draw\">draw()</a> के अंदर कॉल किया जाता है, जब लूप में ट्रांसफ़ॉर्मेशन रीसेट हो जाता है फिर से शुरू होता है।",
                "तकनीकी रूप से, <a href=\"#/p5/shearX\">shearX()</a> वर्तमान रूपांतरण मैट्रिक्स को एक रोटेशन मैट्रिक्स से गुणा करता है। इस फ़ंक्शन को <a href=\"#/p5/push\">push()</a>द्वारा और नियंत्रित किया जा सकता है और <a href=\"#/p5/pop\">pop()</a> फंक्शन।"
              ],
            "params": [
                "संख्या: रेडियन या डिग्री में निर्दिष्ट कटिंग कोण, वर्तमान कोण मोड कोण पर निर्भर करता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "shearY": {
            "description": [
                "y-अक्ष के चारों ओर एक आकार को कोण पैरामीटर द्वारा निर्दिष्ट राशि को कतरता है। कोणों को वर्तमान कोण मोड में निर्दिष्ट किया जाना चाहिए। वस्तुओं को हमेशा उनकी सापेक्ष स्थिति के आसपास मूल और सकारात्मक संख्याएं वस्तुओं को दक्षिणावर्त दिशा में कतरती हैं।",
                "परिवर्तन सब कुछ पर लागू होता है जो फ़ंक्शन के बाद और बाद में कॉल के प्रभाव को जमा करता है। उदाहरण के लिए, शीयरवाई (PI/2) और फिर शीयरवाई (PI/2) को कॉल करना शीयरवाई (PI) के समान है। यदि <a href= \"#/p5/shearY\">shearY()</a> को <a href=\"#/p5/draw\">draw()</a> में कॉल किया जाता है, जब लूप में ट्रांसफॉर्मेशन रीसेट हो जाता है फिर से शुरू होता है।",
                "तकनीकी रूप से, <a href=\"#/p5/shearY\">shearY()</a> वर्तमान रूपांतरण मैट्रिक्स को एक रोटेशन मैट्रिक्स से गुणा करता है। इस फ़ंक्शन को <a href=\"#/ द्वारा और नियंत्रित किया जा सकता है। p5/push\">push()</a> और <a href=\"#/p5/pop\">pop()</a> फंक्शन।"
              ],
            "params": [
                "संख्या: रेडियन या डिग्री में निर्दिष्ट कटिंग कोण, वर्तमान कोण मोड कोण पर निर्भर करता है।"
            ],
            "returns": "p5 ऑब्जेक्ट"
        },
        "translate": {
            "description": [
                "डिस्प्ले विंडो के भीतर वस्तुओं को विस्थापित करने के लिए एक राशि निर्दिष्ट करता है। x पैरामीटर बाएँ/दाएँ अनुवाद निर्दिष्ट करता है, y पैरामीटर ऊपर/नीचे अनुवाद निर्दिष्ट करता है।",
                "रूपांतरण संचयी होते हैं और उन सभी चीजों पर लागू होते हैं जो फ़ंक्शन के बाद और बाद में कॉल के प्रभाव को जमा करते हैं। उदाहरण के लिए, अनुवाद को कॉल करना (50, 0) और फिर अनुवाद (20, 0) अनुवाद (70, 0) के समान है। यदि <a href=\"#/p5/translate\">translate()</a> को <a href=\"#/p5/draw\">draw()</a> में कॉल किया जाता है, तो रूपांतरण है लूप के फिर से शुरू होने पर रीसेट करें। इस फ़ंक्शन को <a href=\"#/p5/push\">push()</a> और <a href=\"#/p5/pop\">pop()</a>का उपयोग करके नियंत्रित किया जा सकता है।"
              ],
            "params": [
                "संख्या: बाएं-दाएं अनुवाद",
                "संख्या: ऊपर-नीचे अनुवाद",
                "संख्या: आगे-पीछे अनुवाद (केवल WEBGL मोड में)"
            ],
            "returns": "p5 ऑब्जेक्ट"
        }
	}
}
