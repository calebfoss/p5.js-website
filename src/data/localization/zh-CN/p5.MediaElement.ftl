description__0 = Extends <a href="#/p5.Element">p5.Element</a> to handle audio and video. In addition to the methods of <a href="#/p5.Element">p5.Element</a>, it also contains methods for controlling media. It is not called directly, but <a href="#/p5.MediaElement">p5.MediaElement</a>s are created by calling <a href="#/p5/createVideo">createVideo</a>, <a href="#/p5/createAudio">createAudio</a>, and <a href="#/p5/createCapture">createCapture</a>.
params__elt = String: DOM node that is wrapped
src__description__0 = Path to the media element source.
src__returns = String: src
play__description__0 = Play an HTML5 media element.
stop__description__0 = Stops an HTML5 media element (sets current time to zero).
pause__description__0 = Pauses an HTML5 media element.
loop__description__0 = Set 'loop' to true for an HTML5 media element, and starts playing.
noLoop__description__0 = Set 'loop' to false for an HTML5 media element. Element will stop when it reaches the end.
autoplay__description__0 = Set HTML5 media element to autoplay or not. If no argument is specified, by default it will autoplay.
autoplay__params__shouldAutoplay = Boolean: whether the element should autoplay
volume__description__0 = Sets volume for this HTML5 media element. If no argument is given, returns the current volume.
volume__returns = Number: current volume
volume__params__val = Number: volume between 0.0 and 1.0
speed__description__0 = If no arguments are given, returns the current playback speed of the element. The speed parameter sets the speed where 2.0 will play the element twice as fast, 0.5 will play at half the speed, and -1 will play the element in normal speed in reverse.(Note that not all browsers support backward playback and even if they do, playback might not be smooth.)
speed__returns = Number: current playback speed of the element
speed__params__speed = Number: speed multiplier for element playback
time__description__0 = If no arguments are given, returns the current time of the element. If an argument is given the current time of the element is set to it.
time__returns = Number: current time (in seconds)
time__params__time = Number: time to jump to (in seconds)
duration__description__0 = Returns the duration of the HTML5 media element.
duration__returns = Number: duration
onended__description__0 = Schedule an event to be called when the audio or video element reaches the end. If the element is looping, this will not be called. The element is passed in as the argument to the onended callback.
onended__params__callback = Function: function to call when the  soundfile has ended. The  media element will be passed  in as the argument to the  callback.
connect__description__0 = Send the audio output of this element to a specified audioNode or p5.sound object. If no element is provided, connects to p5's main output. That connection is established when this method is first called. All connections are removed by the .disconnect() method.
connect__description__1 = This method is meant to be used with the p5.sound.js addon library.
connect__params__audioNode = AudioNode|Object: AudioNode from the Web Audio API, or an object from the p5.sound library
disconnect__description__0 = Disconnect all Web Audio routing, including to main output. This is useful if you want to re-route the output through audio effects, for example.
showControls__description__0 = Show the default MediaElement controls, as determined by the web browser.
hideControls__description__0 = Hide the default mediaElement controls.
addCue__description__0 = Schedule events to trigger every time a MediaElement (audio/video) reaches a playback cue point.
addCue__description__1 = Accepts a callback function, a time (in seconds) at which to trigger the callback, and an optional parameter for the callback.
addCue__description__2 = Time will be passed as the first parameter to the callback function, and param will be the second parameter.
addCue__returns = Number: id ID of this cue,  useful for removeCue(id)
addCue__params__time = Number: Time in seconds, relative to this media  element's playback. For example, to trigger  an event every time playback reaches two  seconds, pass in the number 2. This will be  passed as the first parameter to  the callback function.
addCue__params__callback = Function: Name of a function that will be  called at the given time. The callback will  receive time and (optionally) param as its  two parameters.
addCue__params__value = Object: (Optional) An object to be passed as the  second parameter to the  callback function.
removeCue__description__0 = Remove a callback based on its ID. The ID is returned by the addCue method.
removeCue__params__id = Number: ID of the cue, as returned by addCue
clearCues__description__0 = Remove all of the callbacks that had originally been scheduled via the addCue method.
clearCues__params__id = Number: ID of the cue, as returned by addCue
