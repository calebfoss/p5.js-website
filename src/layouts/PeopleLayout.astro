---
import Image from "@components/Image/index.astro";
import BaseLayout from "./BaseLayout.astro";
import type { CollectionEntry } from "astro:content";
import { setJumpToState } from "../globals/state";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";

interface Props {
  entries: CollectionEntry<"people">[];
  title: string;
}

const { entries, title } = Astro.props;

interface DisplayedEntries {
  alumni: CollectionEntry<"people">[];
  contributor: CollectionEntry<"people">[];
  featured: CollectionEntry<"people">[];
}

// Sort entries first, handling possibly undefined 'order'
const sortedEntries = entries.sort((a, b) => {
  const orderA =
    a.data.order !== undefined ? a.data.order : Number.MAX_SAFE_INTEGER;
  const orderB =
    b.data.order !== undefined ? b.data.order : Number.MAX_SAFE_INTEGER;
  return orderA - orderB;
});
const filteredEntries = sortedEntries.reduce<DisplayedEntries>(
  (acc, item) => {
    const key = item.data.displayed as keyof DisplayedEntries; // 'gallery' or 'featured'
    acc[key].push(item); //  Safe to do because we assert that key is one of the keys of DisplayedEntrie
    return acc;
  },
  { alumni: [], featured: [], contributor: [] } // Initializing with empty arrays for both keys
);

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

setJumpToState(null);
---

<BaseLayout title={title} variant="item" topic="about">
  <h3 class="mb-xl">
    {t("peoplePage", "PageDescription")}
  </h3>
  <ul class="content-grid">
    {
      filteredEntries.featured.map((person) => (
        <li class="col-span-6 md:col-span-9 lg:col-span-12 content-grid">
          <div class="col-span-4 md:col-span-9 lg:col-span-3 grayscale">
            <Image
              src={person.data.image!}
              alt={person.data.imageAlt!}
              aspectRatio="square"
            />
            <div class="mt-xs">
              <a
                href={person.data.url}
                aria-label={`Link to ${person.data.name}'s personal website'`}
              >
                {person.data.name}
              </a>
            </div>
            <p class="text-body-caption mt-0">{person.data.role}</p>
          </div>
          <p class="col-span-6 md:col-span-9 p-0 m-0">{person.data.blurb}</p>
        </li>
      ))
    }
  </ul>
  <h2 class="mb-lg">{t("Alumni")}</h2>
  <ul class="content-grid">
    {
      filteredEntries.alumni.map((person) => (
        <li class="col-span-2">
          <div class="grayscale">
            <Image
              src={person.data.image!}
              alt={person.data.imageAlt!}
              aspectRatio="square"
            />
          </div>
          <div class="mt-xs">
            <a
              href={person.data.url}
              aria-label={`Link to ${person.data.name}'s personal website'`}
            >
              {person.data.name}
            </a>
          </div>
          <p class="text-body-caption mt-0">{person.data.role}</p>
        </li>
      ))
    }
  </ul>
  <h2 class="mb-lg">{t("Contributors")}</h2>
  <ul class="content-grid !gap-xs">
    {
      filteredEntries.contributor.map((person) => (
        <li class="col-span-3">
          <a
            href={person.data.url}
            aria-label={`Link to ${person.data.name}'s personal website'`}
          >
            {person.data.name}
          </a>
        </li>
      ))
    }
  </ul>
</BaseLayout>
