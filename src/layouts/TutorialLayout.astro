---
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";
import { setJumpToState } from "../globals/state";

const { entry, relatedEntries } = Astro.props;
const { Content } = await entry.render();

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const jumpToLinks = relatedEntries.map((relEntry: any) => ({
  label: relEntry.data.title,
  url: `/tutorials/${relEntry.slug}`,
  size: "small",
  current: relEntry.slug === entry.slug,
}));

jumpToLinks.unshift({
  label: entry.data.category,
  url: `/tutorials#${entry.data.category}`,
});

const jumpToState = {
  title: t("Tutorials"),
  links: jumpToLinks,
};

setJumpToState(jumpToState);
---

<BaseLayout title={entry.data.title} variant="item">
  {entry.data.authors && <h6>By {entry.data.authors.join(", ")}</h6>}
  {entry.data.authorsNote && <h7>{entry.data.authorsNote}</h7>}
  <Content />

  <h2>Related examples</h2>
  <ul>
    {/* revise when schema for examples exists */}
    {entry.data.relatedContent?.examples?.map((relEx: any) => <li>{relEx}</li>)}
  </ul>

  <h2>Related references</h2>
  <ul>
    {/* revise when schema for reference exists */}
    {
      entry.data.relatedContent?.references?.map((relRef: any) => (
        <li>{relRef}</li>
      ))
    }
  </ul>
</BaseLayout>
