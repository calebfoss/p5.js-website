---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import LinkButton from "@components/LinkButton/index.astro";
import GridItemSketch from "@components/GridItem/Sketch.astro";
import GridItemLibrary from "@components/GridItem/Library.astro";
import GridItemEvent from "@components/GridItem/Event.astro";
import { getCurrentLocale, useTranslations } from "@i18n/utils";
import { type OpenProcessingCurationResponse } from "../api/OpenProcessing";

interface Props {
  sketches: OpenProcessingCurationResponse;
  libraries: CollectionEntry<"libraries">[];
  pastEvents: CollectionEntry<"past-events">[];
}

// Max number of sketches we will show on this page
const sketchesLimit = 8;
// Max number of libraries we will show on this page
const librariesLimit = 8;
// Max number of libraries we will show on this page
const eventsLimit = 9;

const sketches = Astro.props.sketches.slice(0, sketchesLimit),
  libraries = Astro.props.libraries.slice(0, librariesLimit),
  events = Astro.props.pastEvents.slice(0, eventsLimit);
const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await useTranslations(currentLocale);
---

<BaseLayout title="Community">
  <section class="mt-md mb-xl">
    <h2 class="mb-lg">{t("Sketches")}</h2>
    <ul class="grid grid-cols-2 gap-y-xl gap-x-md md:grid-cols-4">
      {
        sketches.map((sk, i) => (
          <li
            class={(() => {
              if (i === 0)
                return "col-span-2 row-span-2 md:col-span-3 md:row-span-3";
              if (i === 1) return "md:row-span-3";
              if (i === 2) return "col-span-2 row-span-2";
              if (i === librariesLimit - 1) return "row-span-2 col-span-2";
              else return "md:row-span-2";
            })()}
          >
            <GridItemSketch item={sk} />
          </li>
        ))
      }
    </ul>
    <LinkButton url="/sketches" variant="link" class="mt-lg"
      >{t("All Sketches")}</LinkButton
    >
  </section>
  <hr />
  <section class="mt-md mb-xl">
    <h2 class="mb-lg">{t("Libraries")}</h2>
    <ul class="grid grid-cols-2 gap-y-xl gap-x-md md:grid-cols-4">
      {
        libraries.slice(0, librariesLimit).map((lib) => (
          <li>
            <GridItemLibrary item={lib} />
          </li>
        ))
      }
    </ul>
    <LinkButton url="/libraries" variant="link" class="mt-lg"
      >{t("All Libraries")}</LinkButton
    >
  </section>
  <hr />
  <section class="mt-md mb-xl">
    <h2 class="mb-lg">{t("Events")}</h2>
    <ul class="grid grid-cols-2 gap-y-xl gap-x-md md:grid-cols-4">
      {
        events.map((event, i) => (
          <li
            class={(() => {
              if (i === 0 || i === 5) return "col-span-2 row-span-2";
              if (i > 0 && i < 5) return "md:row-span-2";
              if (i === 8)
                return "col-span-2 row-span-2 md:row-span-1 md:col-span-1";
            })()}
          >
            <GridItemEvent item={event} />
          </li>
        ))
      }
    </ul>
    <LinkButton url="/past-events" variant="link" class="mt-lg"
      >{t("All Events")}</LinkButton
    >
  </section>
</BaseLayout>
