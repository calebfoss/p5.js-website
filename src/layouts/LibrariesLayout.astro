---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import GridItemLibrary from "@components/GridItem/Library.astro";
import { setJumpToState, type JumpToLink } from "../globals/state";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";
import { categories, categoryNames } from "../content/libraries/config";

interface Props {
  entries: CollectionEntry<"libraries">[];
  title: string;
}
type LibraryEntry = CollectionEntry<"libraries">;

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const { entries } = Astro.props;

function strCompare(a: string, b: string) {
  if (a < b) {
    return -1;
  }
  if (a > b) {
    return 1;
  }
  return 0;
}

const sections = categories.map((slug) => {
  const name = categoryNames[slug];
  const sectionEntries = entries
    .filter((e: LibraryEntry) => e.data.category === slug)
    .sort(
      (a: LibraryEntry, b: LibraryEntry) =>
        strCompare(a.data.name.toLowerCase(), b.data.name.toLowerCase())
    );

  return { slug, name, sectionEntries };
});

const pageJumpToLinks = categories.map((category) => ({
  url: `#${category}`,
  label: category
    .split("-")
    .map((word) => word[0].toUpperCase() + word.slice(1))
    .join(" "),
}));

setJumpToState({
  heading: t("Tutorials") as string,
  links: pageJumpToLinks as JumpToLink[],
});

setJumpToState(null);
---

<BaseLayout title="Libraries" variant="item" topic="community">
  <hr />
  <ul class="grid grid-cols-2 gap-y-xl gap-x-md lg:grid-cols-4">
    {
      entries.map((lib) => (
        <li>
          <GridItemLibrary item={lib} />
        </li>
      ))
    }
  </ul>
</BaseLayout>
