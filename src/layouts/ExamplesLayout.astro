---
import BaseLayout from "./BaseLayout.astro";
import type { ExampleDocContentItem } from "../content/types";
import { getExampleCategory } from "../pages/_utils";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";
import { setJumpToState, type JumpToState, type JumpToLink } from "../globals/state";

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const { exampleEntries } = Astro.props;
const exampleCategories = new Set();
exampleEntries.forEach((exampleEntry: ExampleDocContentItem) => {
  exampleCategories.add(getExampleCategory(exampleEntry.id));
});

const examplesByCategory = Array.from(exampleCategories).map((category) => {
  return {
    name: category,
    examples: exampleEntries.filter((exampleEntry: ExampleDocContentItem) => {
      return getExampleCategory(exampleEntry.id) === category;
    }),
  };
});

const jumpToLinks = Array.from(exampleCategories).map((category) => (
   {
    label: category as string,
    url: `/examples/#${category}`,
  }
)) as unknown as JumpToLink[];

const jumpToState = {
  links: jumpToLinks,
  heading: t("Examples") as string,
} as JumpToState;

setJumpToState(jumpToState);

---

<BaseLayout title="Examples">
  <div class="content-grid">

    {
      examplesByCategory.map((category) => (
        <div class="col-span-12 w-full overflow-hidden">
          <h2>{category.name} <a id={category.name as string}/></h2>
          <div class="grid grid-cols-12 gap-4">
            {
              category.examples.map((exampleEntry: ExampleDocContentItem) => (
                <div class="col-span-3 w-full overflow-hidden">
                  <!-- placeholder for thumbnail -->
                  <div class="aspect-square border border-sidebar-type-color w-full"/>
                  <a href={`/examples/${exampleEntry.slug}`}>
                    {exampleEntry.data.title}
                  </a>
                </div>
              ))
            }
          </div>
        </div>
      ))
    }
  </div>
</BaseLayout>
