---
import BaseLayout from "./BaseLayout.astro";
import GridItemExample from "@components/GridItem/Example.astro";
import { getExampleCategory } from "../pages/_utils";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";
import {
  setJumpToState,
  type JumpToState,
  type JumpToLink,
} from "../globals/state";
import type { CollectionEntry } from "astro:content";

interface Props {
  exampleEntries: CollectionEntry<"examples">[];
}

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const { exampleEntries } = Astro.props;
const exampleCategories = new Set<string>();
exampleEntries.forEach((exampleEntry) => {
  exampleCategories.add(getExampleCategory(exampleEntry.id));
});

const examplesByCategory = Array.from(exampleCategories).map((category) => {
  return {
    name: category,
    examples: exampleEntries.filter((exampleEntry) => {
      return getExampleCategory(exampleEntry.id) === category;
    }),
  };
});

const jumpToLinks = Array.from(exampleCategories).map((category) => ({
  label: category as string,
  url: `/examples/#${category}`,
})) as unknown as JumpToLink[];

const jumpToState = {
  links: jumpToLinks,
  heading: t("Examples") as string,
} as JumpToState;

setJumpToState(jumpToState);
---

<BaseLayout title="Examples">
  <div class="grid grid-cols-2 md:grid-cols-4 gap-x-md gap-y-2xl mt-md mb-2xl">
    {
      examplesByCategory.map((category, i) => (
        <div class="col-span-2 md:col-span-4 grid grid-cols-subgrid gap-y-xl md:gap-y-lg">
          <div class="col-span-full">
            {i !== 0 ? <hr class="mb-md" /> : null}
            <h2 class="mt-0">
              {category.name} <a id={category.name} />
            </h2>
          </div>
          <div class="col-span-full grid grid-cols-subgrid gap-y-2xl md:gap-y-lg">
            {category.examples.map((exampleEntry) => (
              <div class="col-span-1">
                {<GridItemExample item={exampleEntry} />}
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</BaseLayout>
