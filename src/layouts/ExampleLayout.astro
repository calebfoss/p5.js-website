---
import type { CollectionEntry } from "astro:content";
import {
  setJumpToState,
  type JumpToLink,
  type JumpToState,
} from "../globals/state";
import {
  getCurrentLocale,
  removeLocalePrefix,
  getUiTranslator,
} from "../i18n/utils";
import {
  exampleContentSlugToLegacyWebsiteSlug,
  getExampleCategory,
  getRelatedEntriesinCollection,
} from "../pages/_utils";
import BaseLayout from "./BaseLayout.astro";
import EditableSketch from "@components/EditableSketch/index.astro";
import RelatedItems from "@components/RelatedItems/index.astro";

interface Props {
  example: CollectionEntry<"examples">;
  code: string;
  relatedExamples: CollectionEntry<"examples">[];
}

const { example, code, relatedExamples } = Astro.props;

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const jumpToLinks: JumpToLink[] = relatedExamples.map((relEx) => {
  const relExSlug = exampleContentSlugToLegacyWebsiteSlug(
    removeLocalePrefix(relEx.slug)
  );

  return {
    label: relEx.data.title,
    url: `/examples${relExSlug}`,
    size: "small",
    current: example.slug === relEx.slug,
  };
});

const category = getExampleCategory(example.slug);

jumpToLinks.unshift({
  label: category,
  url: `/examples/#${category}`,
});

const jumpToState = {
  heading: t("Examples"),
  links: jumpToLinks,
} as JumpToState;

setJumpToState(jumpToState);

const relatedReferences =
  example.data.relatedReference !== undefined
    ? await getRelatedEntriesinCollection(
        "reference",
        currentLocale,
        example.data.relatedReference.map((r) => r.slug)
      )
    : [];

const { Content } = await example.render();
---

<BaseLayout title={example.data.title} variant="item" topic="examples">
  <div class="mt-xl mb-4xl lg:mb-3xl max-w-screen-md">
    <div class="rendered-markdown">
      <Content />
    </div>
    <EditableSketch code={code} />
    <p>{example.data.arialabel}</p>
  </div>
  <div class="grid gap-y-4xl lg:gap-y-mb-3xl mt-2xl">
    {
      relatedReferences.length > 0 ? (
        <RelatedItems
          title={t("Related Reference") as string}
          items={relatedReferences}
        />
      ) : null
    }
    <RelatedItems
      title={t("Related Examples") as string}
      items={relatedExamples}
    />
  </div>
</BaseLayout>
